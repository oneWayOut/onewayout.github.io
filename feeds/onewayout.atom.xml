<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>NutShellKing Blog - oneWayOut</title><link href="https://oneWayOut.github.io/" rel="alternate"></link><link href="https://oneWayOut.github.io/feeds/onewayout.atom.xml" rel="self"></link><id>https://oneWayOut.github.io/</id><updated>2018-02-24T00:00:00+08:00</updated><entry><title>2018年计划</title><link href="https://oneWayOut.github.io/articles/xue-xi-zong-jie/2018_Resolution/" rel="alternate"></link><published>2018-02-24T00:00:00+08:00</published><updated>2018-02-24T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2018-02-24:/articles/xue-xi-zong-jie/2018_Resolution/</id><summary type="html">&lt;p&gt;2018计划，新的一年会更好&lt;/p&gt;</summary><content type="html">&lt;p&gt;若非有某种强制手段或高度的使命责任感，自己怕是懒得动弹一下。然而年过而立，诸事未立，新的事物层出不穷，应接不暇，注意力时还常耗用于电子产品带来的各种垃圾信息，时常袭来一阵焦虑，若非给自己一些挑战，怕是会总这样浑浑噩噩下去，诸事立不起来。农历新年的假期里给自己拟了一个新年计划，写出来是为了更加正式、有约束力，希望新的一年里不虚掷光阴，有更丰富的知识储备、更积极的生活心态、更健康的体魄。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;读完以下书籍:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data Structures &amp;amp; Algorithms in Python&lt;/li&gt;
&lt;li&gt;Fluent Python&lt;/li&gt;
&lt;li&gt;C++ Primer&lt;/li&gt;
&lt;li&gt;C++ Primer Plus&lt;/li&gt;
&lt;li&gt;Effective C++&lt;/li&gt;
&lt;li&gt;Small Unmanned Aircraft&lt;/li&gt;
&lt;li&gt;图解机器学习&lt;/li&gt;
&lt;li&gt;软件架构实践(第3版 影印版)&lt;/li&gt;
&lt;li&gt;编程珠玑&lt;/li&gt;
&lt;li&gt;设计心理学&lt;/li&gt;
&lt;li&gt;艺术的故事&lt;/li&gt;
&lt;li&gt;高等数学&lt;/li&gt;
&lt;li&gt;数学与科技&lt;/li&gt;
&lt;li&gt;为什么去火星&lt;/li&gt;
&lt;li&gt;TED TALKS The official TED Guide to Public Speaking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成去年打算做但几近烂尾的项目&lt;a href="https://github.com/oneWayOut/PX4UAV_Sim"&gt;PX4UAV_Sim&lt;/a&gt;：一个可为Pixhawk软件进行飞行仿真的六自由度UAV动力学模型代码库;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学习和利用这几个代码库：PX4/Firmware, STL, JSBSim, GoogleTest;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;个人网站文章至少每月一更，日记有好几个月没写了，也得继续坚持，还可兼练字之用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每周锻炼3次以上：游泳、跑步、太极等不限；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;听一些巴赫，贝多芬之外的古典乐。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The clock is ticking, 跳出自己的心理舒适圈，努力持之以恒地开始实施吧！&lt;/p&gt;</content><category term="Resolution 计划"></category></entry><entry><title>Pixhawk连接摇杆进行仿真</title><link href="https://oneWayOut.github.io/articles/xue-xi-zong-jie/pixhawk_joystick/" rel="alternate"></link><published>2017-12-02T00:00:00+08:00</published><updated>2017-12-02T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2017-12-02:/articles/xue-xi-zong-jie/pixhawk_joystick/</id><summary type="html">&lt;p&gt;对Pixhawk代码中的仿真接口模块进行了更改，使其能够直接通过USB接口读取控制摇杆的输入，实现对其飞控代码的仿真飞行控制&lt;/p&gt;</summary><content type="html">&lt;h3 id="1"&gt;1. 问题&lt;/h3&gt;

&lt;p&gt;最近有这样一个需求: 对Pixhawk软件中的控制算法进行更改后，需要对其控制算法、各模式间的切换等进行全面地仿真测试，避免实际飞行时炸机的损失。
按照&lt;a href="https://dev.px4.io/en/simulation/"&gt;官方文档中的方法&lt;/a&gt;， 可利用Gazebo, QGroundControl等配合完成大部分的大部分的测试，还可连接控制摇杆/手柄(Joystick/Gamepad), 将其作为手动输入。同事付老师帮忙给了一个Made in China的Saitek Cyborg evo摇杆，按照官网方法进行配置，发现在仿真中无法通过其设置手动、增稳、自动等飞行模式，一查，原来仅有&lt;a href="https://docs.qgroundcontrol.com/en/SetupView/Joystick.html#sony-playstation-34-controllers"&gt;高端的Sony的摇杆才能支持模式切换&lt;/a&gt;。 只好想办法省钱，通过更改软件解决无法通过摇杆切换模式的问题。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="/images/px4_joystick/Joystick.jpg"　height="400"/&gt;&lt;/center&gt; &lt;/p&gt;
&lt;h3 id="2"&gt;2. 问题分析&lt;/h3&gt;

&lt;p&gt;PX4原有的仿真环境交联关系如下图：
&lt;center&gt;&lt;img src="/images/px4_joystick/SITL1.png"　height="448"/&gt;&lt;/center&gt; 
从图中可以看出摇杆的输入通过QGroundControl地面站读取后，转发给控制软件。若能通过控制软件直接读取摇杆输入，如下图：
&lt;center&gt;&lt;img src="/images/px4_joystick/SITL2.png" height="448"/&gt;&lt;/center&gt; &lt;/p&gt;
&lt;p&gt;在控制软件中读取摇杆输入后，对其解析，将按键消息打包为软件能识别的模式切换指令消息，并按照PX4软件中的消息发布订阅机制将其发送至负责模式切换的模块，即能解决前述问题。因此须分以下两步达到目标:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取摇杆输入，正确解析其消息；&lt;/li&gt;
&lt;li&gt;将摇杆消息打包为软件可识别的Topic, 将其发布；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;事后想了一下官网中通过QGroundControl转发摇杆数据，而非通过控制软件直接读取的原因可能如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方便对不同摇杆进行校准操作. 因最终软件需要的控制量数据均需要进行归一化处理, 可通过QGroundControl对不同类型摇杆进行统一校准操作；&lt;/li&gt;
&lt;li&gt;可保持软件的通用性，在SITL, HITL, 或实际飞行时均可通过Joystick控制飞行。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="3"&gt;3. 解决方案&lt;/h3&gt;

&lt;h4 id="3.1"&gt;3.1. 读取摇杆输入&lt;/h4&gt;

&lt;p&gt;首选需要弄清如何读取摇杆输入. 以谷歌找到的一个&lt;a href="https://www.kernel.org/doc/Documentation/input/joystick-api.txt"&gt;linux官方文档&lt;/a&gt;及&lt;a href="https://github.com/drewnoakes/joystick"&gt;代码工程&lt;/a&gt;为参考，写了如下一个简单测试程序读取摇杆输入，测试环境为Ubuntu 16.04LTS.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/fcntl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;time.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cp"&gt;#define JS_EVENT_BUTTON 0x01 &lt;/span&gt;&lt;span class="c1"&gt;// button pressed/released&lt;/span&gt;
&lt;span class="cp"&gt;#define JS_EVENT_AXIS   0x02 &lt;/span&gt;&lt;span class="c1"&gt;// joystick moved&lt;/span&gt;
&lt;span class="cp"&gt;#define JS_EVENT_INIT   0x80 &lt;/span&gt;&lt;span class="c1"&gt;// initial state of device&lt;/span&gt;

&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;  &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* event timestamp in milliseconds */&lt;/span&gt;
    &lt;span class="kt"&gt;short&lt;/span&gt;         &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="cm"&gt;/* value: for buttons: 1/0 = down/up; axes: -32767~32767*/&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="cm"&gt;/* event type */&lt;/span&gt;
    &lt;span class="kt"&gt;unsigned&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;   &lt;span class="cm"&gt;/* axis/button number */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;JS_EVENT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//open the joystick device, the name might be different&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;fd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/dev/input/js0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;O_RDONLY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;can not open joystick!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;stat&lt;/span&gt; &lt;span class="n"&gt;sbuf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;stat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/dev/input/js0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;sbuf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/etc/hosts file size = %ld&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sbuf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;st_rdev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;JS_EVENT&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Restrict rate&lt;/span&gt;
        &lt;span class="n"&gt;usleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Attempt to sample an event from the joystick&lt;/span&gt;
        &lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JS_EVENT&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bytes&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;JS_EVENT&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;JS_EVENT_BUTTON&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Button %u  is %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;up&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;down&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;JS_EVENT_AXIS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Axis %u is at position %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;使用如下命令编译&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;g++ -g -o readJoy main.cpp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过USB连接Saitek Cyborg evo摇杆, 执行程序,得到如下结果:
&lt;center&gt;&lt;img src="/images/px4_joystick/readJoyStick.png"/&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;p&gt;代码中通过JS_EVENT结构体读取数据，该数据结构中的type表示了摇杆事件类型(轴移动或按键)， 而number和value则分别表示了哪一个轴/按键的事件值。
拟通过摇杆的各轴作为roll, pitch, yaw, throttle控制，以按键控制模式切换。为了进行下一步工作，须测试得出各轴的极限位置下软件采到的事件值: &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Axis&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Direction&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;axis0&lt;/td&gt;
&lt;td&gt;Roll&lt;/td&gt;
&lt;td&gt;-32767~32767&lt;/td&gt;
&lt;td&gt;left~right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis1&lt;/td&gt;
&lt;td&gt;Pitch&lt;/td&gt;
&lt;td&gt;32767~-32767&lt;/td&gt;
&lt;td&gt;backward~forward&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis2&lt;/td&gt;
&lt;td&gt;Throttle&lt;/td&gt;
&lt;td&gt;32767~-32767&lt;/td&gt;
&lt;td&gt;min~max&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;axis3&lt;/td&gt;
&lt;td&gt;Yaw&lt;/td&gt;
&lt;td&gt;-32767~32767&lt;/td&gt;
&lt;td&gt;left~right&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id="3.2"&gt;3.2. 修改Pixhawk源码&lt;/h4&gt;

&lt;p&gt;读取解析到摇杆的动作事件数据仅是第一步，为将其集成至Pixhawk中的软件模块，还需注意以下问题:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;上述示例代码中的read()函数为阻塞调用，若直接将其放入某个线程中，没有事件发生时，会导致该线程阻塞而无法执行其他语句，须使用linux提供的poll()接口，仅当查询到有事件发生才调用read()读设备文件上的消息;&lt;/li&gt;
&lt;li&gt;须按照Pixhawk的消息订阅/发布(publish/subscribe)机制将摇杆消息打包成软件可识别的消息，在此我们将其打包为&lt;strong&gt;manual_control_setpoint&lt;/strong&gt;消息。因为事实上软件中sensors模块中rc_update.cpp将原始的遥控器消息也解析为&lt;strong&gt;manual_control_setpoint&lt;/strong&gt;消息，并将其发布。位置控制模块订阅该消息，获取其中的各轴控制量信息。特别需要注意的是Commander模块也订阅该消息，在Commander.cpp中的set_main_state_rc()函数中，根据该消息中的模式设置变量设置飞机的模式。需要根据该函数逆推出发生各模式按键事件后，应该给manual_control_setpoint消息中所需填充的正确值，以期得到目标模式。&lt;/li&gt;
&lt;li&gt;按照上述思路更改代码后，发现按压摇杆上对应按键后，有时无法切换模式的问题。排查发现发布消息的频率过快(6ms)，很可能导致消息队列满，使Commander模块无法接收到新消息，从而无法切换模式的问题。将发布消息的周期改为50ms, 该问题再无复现。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最终通过摇杆上的按键0,1,2分别控制手动、增稳、自动三种模式，以其四个轴(axis)控制滚转、俯仰、偏航及油门。在PX4/Firmware的v1.6.5稳定版代码基础上，对&lt;a href="https://github.com/oneWayOut/Firmware/blob/cai_readJS/src/modules/simulator/simulator_mavlink.cpp"&gt;simulator_mavlink.cpp&lt;/a&gt;文件更改，插入部分代码，均在&lt;strong&gt;#ifdef ENABLE_JOYSTICK ... #endif&lt;/strong&gt; 预处理块内，详见https://github.com/oneWayOut/Firmware上的&lt;a href="https://github.com/oneWayOut/Firmware/tree/cai_readJS"&gt;cai_readJS&lt;/a&gt;分支。&lt;/p&gt;
&lt;p&gt;在代码目录的终端中输入以下命令，可对其进行测试:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make posix gazebo_plane
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;连接QGroundControl后，即可模拟飞行操作。&lt;/p&gt;</content><category term="Pixhawk"></category><category term="Joystick"></category><category term="Simulation"></category><category term="摇杆， 仿真"></category></entry><entry><title>博客迁移笔记</title><link href="https://oneWayOut.github.io/articles/xue-xi-zong-jie/move_blog/" rel="alternate"></link><published>2017-05-07T00:00:00+08:00</published><updated>2017-05-07T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2017-05-07:/articles/xue-xi-zong-jie/move_blog/</id><summary type="html">&lt;p&gt;记录了博客从Jekyll迁移至Pelican的过程中解决的几个问题&lt;/p&gt;</summary><content type="html">&lt;p&gt;去年花了一些时间在github上建起了&lt;a href="http://onewayout.github.io"&gt;个人博客&lt;/a&gt;，后来又购买了&lt;a href="http://nutshellking.com"&gt;域名nutshellking.com&lt;/a&gt;(取自哈姆雷特台词I could be bounded in a &lt;strong&gt;nutshell&lt;/strong&gt;, and count myself a &lt;strong&gt;king&lt;/strong&gt; of infinite space), 该博客采用Jekyll生成，基本满足了我想要的如下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码高亮；&lt;/li&gt;
&lt;li&gt;支持数学公式显示(通过Mathjax实现)；&lt;/li&gt;
&lt;li&gt;支持评论（通过Disqus实现，后来发现此项功能被GFW屏蔽了）；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自那以后，一直瞎忙，没时间打理博客，近来兴起，想将个人博客网站更新重整。此博客原来使用的Jekyll是一个Ruby语言写成的静态网页生成器, 因觉得Ruby用途较为单一，最近在学应用广泛的Python的缘故，觉得将博客迁移至基于Python技术的Web框架应该会比较有趣。比较成熟的Python Web框架要数Flask与Django了。对于一个简洁的博客，Django可能太过重量级，Flask就够用了，因此买了本《Flask Web开发　基于Python的Web应用开发实战》（人称Flask狗书），在电脑上演练一番。在此过程中填了不少坑，浪费了不少时间，最终转到与Jekyll十分类似的Pelican上面。将此段时间的折腾记录如下。&lt;/p&gt;
&lt;p&gt;Flask狗书循序渐进的讲述了Flask开发的各个步骤，结合其提供的&lt;a href="https://github.com/miguelgrinberg/flasky"&gt;git代码库&lt;/a&gt;能够按章节一步步实现、理解所需功能，实为良心之作。该书作者作为Flask的核心开发者，其个人网站上也有一个讲解&lt;a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;Flask的教程&lt;/a&gt;很不错。但Flask仅仅只是一个框架，要将其变为可部署的个人博客产品显然需要定制各种插件，加入个性化配置，有很多工作要做。这也是我最初始料未及的。
&lt;h2 id="1"&gt;1. Flask　Web开发实战书中的几个问题&lt;/h2&gt;
&lt;h3 id="1.1"&gt;1.1 注册时无法通过email收到激活邮件&lt;/h3&gt;
第8章中用户注册功能需要用向注册的用户发送激活邮件，此步骤要求必须实现配置好邮件发送相关设置，代码中默认的设置使用google的邮件服务，不更改此处显然无法成功。
该设置在Config.py中，以第9章的程序为例, 首先签出对应版本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/miguelgrinberg/flasky.git
&lt;span class="nb"&gt;cd&lt;/span&gt; flasky
git checkout 9a
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意Config.py中以下代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;MAIL_SERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.googlemail.com&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;MAIL_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;587&lt;/span&gt;
    &lt;span class="n"&gt;MAIL_USE_TLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
    &lt;span class="n"&gt;MAIL_USERNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MAIL_USERNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;MAIL_PASSWORD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;MAIL_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;FLASKY_MAIL_SUBJECT_PREFIX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[Flasky]&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;FLASKY_MAIL_SENDER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Flasky Admin &amp;lt;flasky@example.com&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;FLASKY_ADMIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;FLASKY_ADMIN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;若使用163邮箱，可更改其MAIL_SERVER及MAIL_PORT如下（其他邮箱可参考email服务商官网帮助）:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;MAIL_SERVER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.163.com&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;MAIL_PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;并将flasky@example.com替换为自己所用邮箱。注意到以上代码中使用了这几个环境变量: MAIL_USERNAME，MAIL_PASSWORD，FLASKY_ADMIN，在linux环境下，需在终端中对其进行设置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;MAIL_USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;mail username&amp;gt;
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;MAIL_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;mail password&amp;gt;
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;FLASKY_ADMIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;mail username&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;若为Windows环境，将export改为set。
注意在终端中输入的邮箱用户名不需要再加上@xxx.com后缀。&lt;/p&gt;
&lt;h3 id="1.2"&gt;1.2 无法发表文章&lt;/h3&gt;

&lt;p&gt;第11章时会出现使用管理员账户登录后无法发表文章的问题，此问题的原因是数据库中角色权限不对。可参考&lt;a href="https://www.zhihu.com/question/42493758"&gt;此处解决方案&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id="1.3"&gt;1.3 markdown生成的网页文件显示不正常&lt;/h3&gt;

&lt;p&gt;按照该书提供源码，使用markdown编写文件，插入如下表格格式的文本，预览时发现无法显示表格。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Item     | Value
-------- | ---
Computer | $1600
Phone    | $12
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这是由于python的markdown模块将文本转换为网页文件时，未指定使用相应扩展所致。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout 11h
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;按以上指令检出文件，找到app/models.py中的on_changed_body函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_changed_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oldvalue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initiator&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;allowed_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;abbr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;acronym&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blockquote&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;&amp;#39;em&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;li&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pre&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;strong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ul&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="s1"&gt;&amp;#39;h1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;h2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;h3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body_html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bleach&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linkify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bleach&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;allowed_tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;将此段代码改为如下即可:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nd"&gt;@staticmethod&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_changed_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oldvalue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initiator&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;myexts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;abbr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;attr_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;def_list&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fenced_code&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;footnotes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tables&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smart_strong&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;admonition&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;codehilite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;headerid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nl2br&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sane_lists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smarty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body_html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bleach&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linkify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;myexts&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;markdown模块的各个扩展的用法可参考&lt;a href="http://pythonhosted.org/Markdown/extensions/"&gt;此处官网&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="2"&gt;2 Pelican中markdown文件插入数学公式无法正确显示&lt;/h2&gt;

&lt;p&gt;Pelican的使用还是相当方便的，但其依赖的Python　Markdown模块转换markdown文件的能力没有Jekyll成熟稳定。借助Mathjax脚本在markdown文件中插入Latex数学公式时，若公式中含有下划线_:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$$\vec{X} = (\vec{x_j}, \vec{x_k})$$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;则下划线在转换后会生成&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;标签，导致无法正确渲染公式。　
解决此问题需要在调用markdown解析转换文件时，碰到$$等符号换种规则解析即可。网上已有&lt;a href="https://github.com/mayoff/python-markdown-mathjax"&gt;解决方案&lt;/a&gt;，就无须重造轮子了。按照该方案将mathjax.py拷贝至markdown模块中的extensions子文件夹中，然后在pelicanconf.py中添加以下代码即可:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;extension_configs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;markdown.extensions.codehilite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;css_class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;highlight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;markdown.extensions.extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;markdown.extensions.meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;markdown.extensions.mathjax&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;output_format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;html5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;填了这么多坑，费了很多时间终于讲博客迁移成功。希望能够继续坚持探索、记录、分享自己的各种想法。&lt;/p&gt;</content><category term="博客"></category><category term="pelican"></category><category term="flask"></category><category term="markdown"></category></entry><entry><title>Pixhawk多旋翼姿态控制算法解析</title><link href="https://oneWayOut.github.io/articles/xue-xi-zong-jie/Pixhawk_attitude_control/" rel="alternate"></link><published>2016-07-02T00:00:00+08:00</published><updated>2017-05-07T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2016-07-02:/articles/xue-xi-zong-jie/Pixhawk_attitude_control/</id><summary type="html">&lt;p&gt;本文介绍了飞行控制用到的一些基础数学知识，并结合Pixhawk源代码详细解析了其多旋翼姿态控制算法。&lt;/p&gt;</summary><content type="html">&lt;script type="text/x-mathjax-config"&gt;
MathJax.Hub.Config({
jax: ["input/TeX", "output/HTML-CSS"],
tex2jax: {
    inlineMath: [ ['$', '$'] ],
    displayMath: [ ['$$', '$$']],
    processEscapes: true,
    skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
},
messageStyle: "none",
"HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"] }
});
&lt;/script&gt;

&lt;script type="text/x-mathjax-config"&gt;
MathJax.Hub.Config({
TeX: { equationNumbers: { autoNumber: "AMS" } }
});
&lt;/script&gt;

&lt;script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt;

&lt;p&gt;网上有些关于Pixhawk姿态控制的文章, 写的都不是很透彻清晰. 因为其姿态控制算法中计算各姿态轴误差的部分代码看起来很是晦涩，很难在教科书或网上找到相关资料，纯粹是开发者自己的经验想法，我所能找到的中文资料基本上没有讲清这一点. 最近在研究Pixhawk多旋翼飞控，现已基本明白其姿态控制原理, 在本文中力图简明地阐述我的理解. &lt;/p&gt;
&lt;p&gt;我在之前的&lt;a href="http://onewayout.github.io/pixhawk/2016/05/24/pixhawk-principle-and-customize.html#1.5"&gt;这篇文章&lt;/a&gt;已对Pixhawk总体架构做了一个概括. 理解了代码架构、控制率，想要利用pixhawk强大的软硬件平台来扩展做自己想要的东西就相当简单了. 大部分个性化的定制应该在控制率、仿真上面. 比如我们新设计了一个异型翼面，控制通道与现有飞机不同的飞机，仅需要在原有控制率上修改或新实现自己的控制率，并更改相关启动脚本及mixer文件就可以了. 而姿态估计、位置估计等模块可不做任何更改完全复用，这也是Pixhawk中通过消息发布/订阅模式来实现模块间通信，从而达到高度模块化的软件架构带来的好处. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1"&gt;1. 前置知识&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.1"&gt;1.1 旋转矩阵的含义&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.2"&gt;1.2 飞机姿态控制中用到的几种旋转表示方法&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.2.1"&gt;1.2.1 坐标系约定&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.2.2"&gt;1.2.2 欧拉角表示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.2.3"&gt;1.2.3 四元数表示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.2.4"&gt;1.2.4 罗德里格旋转公式&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.3"&gt;1.3 姿态误差的求取&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2"&gt;2. Pixhawk姿态控制解析&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.1"&gt;2.1 Pixhawk飞控架构&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.2"&gt;2.2 Pixhawk姿态控制代码解析&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.2.1"&gt;2.2.1 角度误差控制&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.2.2"&gt;2.2.2 角速率误差控制&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="1"&gt;1. 前置知识&lt;/h2&gt;

&lt;p&gt;姿态控制需要用到空间旋转，矩阵等知识，网上教程很多，鱼龙混杂难以取舍，我在这里尽量以最简明的语言阐释所有需要用到的知识（KISS原则, 你懂的^_^）. &lt;/p&gt;
&lt;h3 id="1.1"&gt;1.1 旋转矩阵的含义&lt;/h3&gt;

&lt;p&gt;矩阵可表示两个向量间关系，有两种惯例来表示旋转矩阵的意义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在固定坐标系下对向量进行旋转，旋转前坐标向量和旋转后坐标向量的关系；&lt;/li&gt;
&lt;li&gt;对坐标系进行旋转，同一个向量在两个坐标系下坐标向量的关系；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们将先以简单的二维旋转为例对上述两种意义逐一阐述，三维空间旋转矩阵不过多了一个维度，其意义相同. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种表示意义：旋转向量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="/images/pixhawk_control_law/01RotationMatrix_1000.gif" alt = "RotationMatrix" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;平面上的每一点 ${\displaystyle P}$都有一个坐标 ${\displaystyle P(x,y)}$，并对应着一个向量${\displaystyle (x,y)}$. 所有普通意义上的平面向量组成了一个空间，记作ℝ²，因为每个向量都可以表示为两个实数构成的有序数组${\displaystyle (x,y)}$. 在向量空间ℝ²，将固定坐标系内的给定向量$\mathbf{v_0}$(本例中为$(1,0)^T$)绕逆时针旋转$\theta$至$\mathbf{v’}$(本例中为$(\cos\theta, \sin\theta)^T$), 可表示如下：&lt;/p&gt;
&lt;p&gt;$$\mathbf{v’} = \mathbf{R_\theta}\mathbf{v_0}$$&lt;/p&gt;
&lt;p&gt;上式中$\mathbf{R_\theta}$为：&lt;/p&gt;
&lt;p&gt;$$\mathbf{R_\theta} =
{\begin{bmatrix}
\cos\theta &amp;amp; -\sin\theta \\
\sin\theta &amp;amp; \cos\theta
\end{bmatrix}}
$$&lt;/p&gt;
&lt;!-- $$\mathbf{v’} = \mathbf{R'_\theta}\mathbf{v_0}$$

$$\mathbf{R'_\theta} =
{\begin{bmatrix}
\cos\theta &amp; \sin\theta \\
-\sin\theta &amp; \cos\theta
\end{bmatrix}}
$$--&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;第二种表示意义：旋转坐标系&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文着重讨论此种惯例表示，因为在飞机姿态控制中会用到多个坐标系:大地坐标系(惯性系)，机体坐标系(非惯性系)...等, 我们需要知道同一向量(速度, 加速度,角速度等)在这些坐标系之间的转换关系, 理解此种表示法的意义非常重要. &lt;/p&gt;
&lt;p&gt;仍从最简单的二维旋转开始，如下图所示：
&lt;center&gt;&lt;img src="/images/pixhawk_control_law/02RotationMatrixAxes_1000.gif" alt = "RotationMatrixAxes" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;旋转矩阵可以表示不同坐标系下同一向量的坐标之间的关系. 以上图为例: $\mathbf{v_0}=(1,0)^T$及$\mathbf{v’}=(\cos\theta, -\sin\theta)^T$分别是向量&lt;strong&gt;V&lt;/strong&gt;在坐标系OX&lt;sub&gt;0&lt;/sub&gt;Y&lt;sub&gt;0&lt;/sub&gt;及OX'Y'中的向量坐标，则有:&lt;/p&gt;
&lt;p&gt;$$\mathbf{v_0} = \mathbf{R_\theta}\mathbf{v'}$$&lt;/p&gt;
&lt;p&gt;$$\mathbf{R_\theta} =
{\begin{bmatrix}
\cos\theta &amp;amp; -\sin\theta \\
\sin\theta &amp;amp; \cos\theta
\end{bmatrix}}$$&lt;/p&gt;
&lt;p&gt;矩阵中每个元素可视为两个坐标系内坐标轴向量夹角的余弦值，这也是称旋转矩阵为方向余弦矩阵(Direction Cosine Matrix)的原因. &lt;/p&gt;
&lt;p&gt;三维旋转较二维旋转复杂得多. 在三维空间内，以大地坐标系和飞机机体坐标系间的旋转关系为例，设大地坐标系为Oxyz, 机体坐标系为OXYZ（坐标系方向约定见&lt;a href="#1.2.1"&gt;1.2.1节&lt;/a&gt;）, 设&lt;strong&gt;i, j, k&lt;/strong&gt;为大地坐标系内x,y,z轴的单位向量. &lt;strong&gt;I, J, K&lt;/strong&gt;为机体坐标系内X, Y, Z轴的单位向量，向量V在大地坐标系和机体坐标系内的坐标分别为$\mathbf{v^G}$,$\mathbf{v^B}$, 则此两向量的关系如下：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}\mathbf{v^G} = \begin{bmatrix}
\mathbf{v_x^G}  \\
\mathbf{v_y^G}  \\
\mathbf{v_z^G}
\end{bmatrix} = \begin{bmatrix}
\mathbf{i}\cdot\mathbf{I} &amp;amp; \mathbf{i}\cdot\mathbf{J} &amp;amp; \mathbf{i}\cdot\mathbf{K} \\
\mathbf{j}\cdot\mathbf{I} &amp;amp; \mathbf{j}\cdot\mathbf{J} &amp;amp; \mathbf{j}\cdot\mathbf{K} \\
\mathbf{k}\cdot\mathbf{I} &amp;amp; \mathbf{k}\cdot\mathbf{J} &amp;amp; \mathbf{k}\cdot\mathbf{K} 
\end{bmatrix}\begin{bmatrix}
\mathbf{v_x^B}  \\
\mathbf{v_y^B}  \\
\mathbf{v_z^B}
\end{bmatrix} = 
\mathbf{R_B^G}
\mathbf{v^B}\label{1eq}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;旋转矩阵$\mathbf{R_B^G}$的每个元素即为两坐标系内坐标轴的夹角余弦值(即&lt;a href="https://zh.wikipedia.org/wiki/数量积"&gt;点乘&lt;/a&gt;). 其三个列向量分别为机体坐标系的X, Y, Z轴在大地坐标系Oxyz内的坐标向量；其三个行向量分别为大地坐标系x, y, z轴在机体坐标系内坐标向量.&lt;/strong&gt; 即：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}\mathbf{R_B^G} = 
\begin{bmatrix}
\mathbf{I^G}  &amp;amp; \mathbf{J^G}  &amp;amp;\mathbf{K^G}
\end{bmatrix} = 
\begin{bmatrix}
\mathbf{i^B}  \\
\mathbf{j^B}  \\
\mathbf{k^B}
\end{bmatrix}\label{2eq}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;旋转矩阵为正交单位阵，其逆矩阵为其转置矩阵:　$\mathbf{R^{T}}=\mathbf{R^{-1}}$. 利用这一性质可在计算机内快速求其逆.  &lt;br&gt;
请务必记清旋转矩阵的含义及其性质, 且不要将两坐标系的转换顺序弄反. &lt;/p&gt;
&lt;p&gt;下节将阐述如何根据各种旋转表示方法计算此矩阵. &lt;/p&gt;
&lt;p&gt;本节参考资料：&lt;br&gt;
&lt;a href="http://mathworld.wolfram.com/RotationMatrix.html"&gt;http://mathworld.wolfram.com/RotationMatrix.html&lt;/a&gt;&lt;br&gt;
&lt;a href="https://gentlenav.googlecode.com/files/DCMDraft2.pdf"&gt;https://gentlenav.googlecode.com/files/DCMDraft2.pdf&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.starlino.com/dcm_tutorial.html"&gt;http://www.starlino.com/dcm_tutorial.html&lt;/a&gt;&lt;br&gt;
Randal W. Beard &amp;amp; Timothy W. McLain &lt;em&gt;Small Unmanned Aircraft: Theory and Practice&lt;/em&gt;   &lt;/p&gt;
&lt;h3 id="1.2"&gt;1.2 飞机姿态控制中用到的几种旋转表示方法&lt;/h3&gt;

&lt;p&gt;在飞控中我们更多地用到三维旋转，这较二维旋转复杂很多，因为二维旋转仅有一个旋转轴(垂直于OXY平面，即Z轴). 三维旋转可绕空间任意轴旋转，二维旋转只是三维旋转的特例. 除了矩阵，我们还可以用四元数、欧拉角等来表示旋转，他们具有一定的等价关系. &lt;/p&gt;
&lt;h4 id="1.2.1"&gt;1.2.1 坐标系约定&lt;/h4&gt;

&lt;p&gt;大地坐标系一般采用&lt;a href="https://en.wikipedia.org/wiki/North_east_down"&gt;NED(North east down)&lt;/a&gt;. &lt;br&gt;
机体坐标系一般定义如下图所示, roll, pitch, yaw轴分别为X, Y, Z轴:
&lt;center&gt;&lt;img src="/images/pixhawk_control_law/04AirplaneAxes.png" alt = "AirplaneAxes" /&gt;&lt;/center&gt;
坐标系方向和旋转方向遵从右手法则. &lt;/p&gt;
&lt;h4 id="1.2.2"&gt;1.2.2 欧拉角表示&lt;/h4&gt;

&lt;p&gt;以欧拉角表示旋转有多种约定，因为对于同一旋转&lt;strong&gt;欧拉角与旋转次序密切相关&lt;/strong&gt;, &lt;a href="https://zh.wikipedia.org/zh-cn/%E6%AC%A7%E6%8B%89%E8%A7%92#.E5.88.A5.E7.A8.AE.E9.A0.86.E5.BA.8F"&gt;参考此处&lt;/a&gt;. 
航空航天工程中常用&lt;a href="https://en.wikipedia.org/wiki/Euler_angles#Tait.E2.80.93Bryan_angles"&gt;z-y′-x″顺规&lt;/a&gt;，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="/images/pixhawk_control_law/03Taitbrianzyx.png" alt = "Taitbrianzyx" /&gt;&lt;/center&gt;
从大地坐标系oxyz旋转到机体坐标系oXYZ的顺序为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;绕oz旋转$\psi$;&lt;/li&gt;
&lt;li&gt;绕oy′旋转$\theta$;&lt;/li&gt;
&lt;li&gt;绕ox″(即oX)旋转$\phi$.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$\psi$，$\theta$，$\phi$即分别为偏航，俯仰，滚转角(yaw, pitch, roll). &lt;/p&gt;
&lt;p&gt;若从机体旋转到大地坐标系，则为相反的顺序和负的旋转方向. &lt;/p&gt;
&lt;p&gt;通过此三个角度可得出旋转矩阵：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}\mathbf{R_B^G} = \begin{bmatrix} c(\psi)c(\theta) &amp;amp; c(\psi)s(\phi)s(\theta) - c(\phi)s(\psi) &amp;amp; s(\phi)s(\psi) + c(\phi)c(\psi)s(\theta) \\ c(\theta)s(\psi) &amp;amp; c(\phi)c(\psi) + s(\phi)s(\psi)s(\theta) &amp;amp; c(\phi)s(\psi)s(\theta) - c(\psi)s(\phi)\\ -s(\theta) &amp;amp; c(\theta)s(\phi) &amp;amp; c(\phi)c(\theta) \end{bmatrix}\label{3eqEulerAngles}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;式中以$c(\alpha)$表示$\cos(\alpha)$, $s(\alpha)$表示$\sin(\alpha)$. &lt;/p&gt;
&lt;!--
http://www.chrobotics.com/library/understanding-euler-angles
此网址中将此公式的矩阵为$$R_I^B$$, 实应为$$R_B^I$$--&gt;

&lt;h4 id="1.2.3"&gt;1.2.3 四元数表示&lt;/h4&gt;

&lt;p&gt;上节使用欧拉角表示两个坐标系间旋转需要旋转三次，而且存在&lt;a href="https://en.wikipedia.org/wiki/Gimbal_lock"&gt;万向锁定问题(Gimbal Lock)&lt;/a&gt;. 而实际任意两个坐标系间可仅通过一次旋转完成，用四元数表示旋转可直观的得出此旋转的旋转轴和旋转角. &lt;/p&gt;
&lt;p&gt;四元数通常可表示为$\mathbb{R}^4$内的一个向量：
$$\mathbf{e} = \begin{pmatrix}
e_0 \\ e_1 \\ e_2 \\ e_3 
\end{pmatrix}
$$&lt;/p&gt;
&lt;p&gt;现以从大地坐标系到机体坐标系的旋转为例说明四元数的定义：设该旋转的旋转轴在大地坐标系内的单位向量为：$(u_x, u_y, u_z)^\mathrm{T}$, 旋转角度为$\Theta$, 可得出四元数的四个元素为：&lt;/p&gt;
&lt;p&gt;$$e_0 = \cos\frac\Theta2$$&lt;/p&gt;
&lt;p&gt;$$\begin{pmatrix}
e_1 \\ e_2 \\ e_3 
\end{pmatrix} = \begin{pmatrix}
u_x \\ u_y \\ u_z
\end{pmatrix}\sin\frac\Theta2
$$&lt;/p&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/wiki/四元数与空间旋转"&gt;维基百科中对四元数&lt;/a&gt;表示旋转的推导比较简明，在此不再赘述. &lt;/p&gt;
&lt;!--$$q=e^{\frac\Theta2(u_xi+u_yj+u_zk)}=\cos\frac\Theta2+(u_xi+u_yj+u_zk)\sin\frac\Theta2$$--&gt;

&lt;p&gt;在1.2.2节中我们已经知道通过欧拉角可直接计算出旋转矩阵，实际上通过四元数也可计算出欧拉角，因此四元数、欧拉角、旋转矩阵间可相互转换. &lt;/p&gt;
&lt;p&gt;本节参考资料：&lt;br&gt;
&lt;a href="https://zh.wikipedia.org/wiki/四元数与空间旋转"&gt;https://zh.wikipedia.org/wiki/四元数与空间旋转&lt;/a&gt;&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles"&gt;https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles&lt;/a&gt;&lt;br&gt;
Randal W. Beard &amp;amp; Timothy W. McLain &lt;em&gt;Small Unmanned Aircraft: Theory and Practice&lt;/em&gt;   &lt;/p&gt;
&lt;h4 id="1.2.4"&gt;1.2.4 罗德里格旋转公式&lt;/h4&gt;

&lt;p&gt;若已知旋转轴$\mathbf{u}$(为单位向量)和旋转角度$\Theta$，我们可以通过计算四元数构造出旋转矩阵，但最简便的方法莫过于直接使用&lt;a href="https://zh.wikipedia.org/wiki/罗德里格旋转公式"&gt;罗德里格旋转公式&lt;/a&gt;，当然这两者完全等价. &lt;/p&gt;
&lt;p&gt;两个坐标系间的旋转矩阵$\mathbf {R}$为：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}{\mathbf {R}}={\mathbf {I}}+(\sin \Theta ){\mathbf {U}}+(1-\cos \Theta ){\mathbf {U}}^{2}\label{4eqrodrig}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;也可写作：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}\mathbf {R} = (\cos \Theta)\mathbf {I} +(\sin \Theta){\mathbf {U}} +(1-\cos \Theta )\mathbf {u} \otimes \mathbf {u}
\label{5eqrodrig}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;仍以大地坐标系到机体坐标系的旋转说明上式: 若$\mathbf{u}$为旋转轴在大地坐标系内的坐标向量, 旋转角度为$\Theta$, 则上式计算结果即为$\mathbf{R_B^G}$.&lt;/p&gt;
&lt;p&gt;上两式中矩阵${\mathbf {U}}$为向量$\mathbf{u}$的&lt;a href="https://en.wikipedia.org/wiki/Cross_product#Conversion_to_matrix_multiplication"&gt;叉积矩阵(cross product matrix)&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;$${\mathbf {U}}={\begin{bmatrix}0&amp;amp;-u_{z}&amp;amp;u_{y}\\
u_{z}&amp;amp;0&amp;amp;-u_{x}\\
-u_{y}&amp;amp;u_{x}&amp;amp;0
\end{bmatrix}}$$&lt;/p&gt;
&lt;p&gt;$\mathbf {u} \otimes \mathbf {u}$为向量$\mathbf {u}$自身的张量积(也可认为是u的行向量与列向量之积):&lt;/p&gt;
&lt;p&gt;$$\mathbf {u} \otimes \mathbf {u} ={\begin{bmatrix}u_{x}^{2}&amp;amp;u_{x}u_{y}&amp;amp;u_{x}u_{z}\\
u_{x}u_{y}&amp;amp;u_{y}^{2}&amp;amp;u_{y}u_{z}\\
u_{x}u_{z}&amp;amp;u_{y}u_{z}&amp;amp;u_{z}^{2}\end{bmatrix}}$$&lt;/p&gt;
&lt;p&gt;由于$\mathbf{u}$为单位向量，可以看出矩阵${\mathbf {U}}^{2}$与矩阵$\mathbf {u} \otimes \mathbf {u}$之差为单位阵，因此$\eqref{4eqrodrig}$与$\eqref{5eqrodrig}$等价. &lt;/p&gt;
&lt;h3 id="1.3"&gt;1.3 姿态误差的求取&lt;/h3&gt;

&lt;p&gt;各姿态轴的误差可通过旋转轴&lt;strong&gt;单位&lt;/strong&gt;向量与旋转角度的乘积给出:&lt;/p&gt;
&lt;p&gt;$$\begin{equation}\mathbf{error} = \begin{pmatrix}
u_x \\ u_y \\ u_z
\end{pmatrix}\Theta
\label{6eqerror}
\end{equation}$$&lt;/p&gt;
&lt;!--**TODO, where do I find the reference矩阵计算形式**--&gt;

&lt;h2 id="2"&gt;2. Pixhawk姿态控制解析&lt;/h2&gt;

&lt;p&gt;有了前面旋转矩阵等相关知识的铺垫，本章节所讲述Pixhawk多旋翼姿态控制就不是特别难了. &lt;/p&gt;
&lt;h3 id="2.1"&gt;2.1 Pixhawk飞控系统框图&lt;/h3&gt;

&lt;p&gt;Pixhawk飞控系统框图可表示如下：
&lt;center&gt;&lt;img src="/images/pixhawk_control_law/2.1control_Arch.png" alt = "control_Arch" /&gt;&lt;/center&gt;
最内层为姿态控制环节，外层依次为位置和航路控制环节. 上图对于多旋翼，固定翼及垂直起降(VTOL)飞机均适用，不同构型飞机飞控的差别在于姿态(Attitude)和位置(Position)的估计(Estimator)和控制(Controller)模块会使用不同的算法，因此会使用不同的模块. 不同构型飞机使用姿态位置估计控制模块可&lt;a href="http://onewayout.github.io/pixhawk/2016/05/24/pixhawk-principle-and-customize.html#1.5"&gt;参考此处的表格&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id="2.2"&gt;2.2 Pixhawk姿态控制解析&lt;/h3&gt;

&lt;p&gt;Pixhawk中多旋翼姿态控制模块对应的源文件为&lt;a href="https://github.com/PX4/Firmware/blob/master/src/modules/mc_att_control/mc_att_control_main.cpp"&gt;Firmware/src/modules/mc_att_control/mc_att_control_main.cpp&lt;/a&gt;. 其关键部分是角度误差控制及角速率误差控制，可表示如下图：
&lt;center&gt;&lt;img src="/images/pixhawk_control_law/2.2attitude_controller.png" alt = "attitude_controller" /&gt;&lt;/center&gt;
角度误差控制和角速率误差控制分别对应于源文件中的&lt;code&gt;control_attitude(float dt)&lt;/code&gt;和&lt;code&gt;control_attitude_rates(float dt)&lt;/code&gt;函数. &lt;br&gt;
此模块中油门(Thrust或Throttle)基本没作控制，以下不讨论. &lt;/p&gt;
&lt;h4 id="2.2.1"&gt;2.2.1 角度误差控制&lt;/h4&gt;

&lt;!--ad.hoc--&gt;

&lt;p&gt;此环节的功能由函数&lt;code&gt;control_attitude(float dt)&lt;/code&gt;完成. 其输入为飞机当前姿态和目标姿态，通过此两姿态的旋转矩阵计算出三个姿态轴的角度误差，进行比例控制，并对航向角度误差(yaw error)另作前馈控制，输出为目标角速率. &lt;br&gt;
此控制环节最难的部分是&lt;strong&gt;如何根据当前姿态和目标姿态两个旋转矩阵计算角度误差&lt;/strong&gt;，此部分完全是&lt;a href="https://groups.google.com/forum/#!topic/px4users/ln3yzqF6Vz0"&gt;开发者Anton Babushkin自己的想法&lt;/a&gt;, 无现成参考论文或资料. 其基本指导思想是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于多旋翼roll和pitch的较yaw的响应速度快，因此首先控制roll和pitch，使飞机的Z轴与目标姿态Z轴一致，最后旋转z轴，消除yaw偏差, 根据此方法计算出各姿态误差；&lt;/li&gt;
&lt;li&gt;在目标姿态Z轴水平时，由于欧拉角的奇异点(singularity)问题，忽略yaw误差;&lt;/li&gt;
&lt;li&gt;若目标姿态与当前姿态Z轴夹角过大(90~270°), 意味着roll和pitch需要更大的控制量. 此时直接根据四元素计算出各姿态误差; 并将此误差与前面第1种方法计算出的误差取各自权重相加,得到最终各姿态误差.&lt;/li&gt;
&lt;/ol&gt;
&lt;!--**TODO 几个坐标系的图示**  或表格;--&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;
&lt;span class="n"&gt;MulticopterAttitudeControl&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;control_attitude&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;vehicle_attitude_setpoint_poll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="n"&gt;_thrust_sp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_v_att_sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thrust&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/* construct attitude setpoint rotation matrix */&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_v_att_sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;R_body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* get current rotation matrix from control state quaternions */&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Quaternion&lt;/span&gt; &lt;span class="n"&gt;q_att&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_ctrl_state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;_ctrl_state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;_ctrl_state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;_ctrl_state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q_att&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_dcm&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="cm"&gt;/* all input data is ready, run controller itself */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此段代码主要是为得到: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当前姿态机体坐标系到大地坐标系的旋转矩阵${\mathbf {R_B^G}}$(代码中为&lt;strong&gt;&lt;code&gt;R&lt;/code&gt;&lt;/strong&gt;);&lt;/li&gt;
&lt;li&gt;目标姿态机体坐标系到大地坐标系的旋转矩阵${\mathbf {R_{sp}^G}}$(代码中为&lt;strong&gt;&lt;code&gt;R_sp&lt;/code&gt;&lt;/strong&gt;). &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至此所有输入已准备就绪，接下来逐步计算各姿态轴角度误差. &lt;/p&gt;
&lt;p&gt;我们之前提到过，旋转当前机体，以使当前机体的Z轴和目标姿态的Z轴重合，此姿态与目标姿态仅存在yaw误差，姑且称此姿态为&lt;strong&gt;rp姿态&lt;/strong&gt;, 以下代码将计算将从当前姿态旋转到&lt;strong&gt;rp姿态&lt;/strong&gt;的旋转轴. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/* try to move thrust vector shortest way, because yaw response is slower than roll/pitch */&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R_z&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R_sp_z&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="cm"&gt;/* axis and sin(angle) of desired rotation */&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transposed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R_z&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;R_sp_z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* calculate angle error */&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;e_R_z_sin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;e_R_z_cos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R_z&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;R_sp_z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


    &lt;span class="cm"&gt;/* calculate weight for yaw control */&lt;/span&gt;
    &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;yaw_w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意代码中&lt;strong&gt;&lt;code&gt;%&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;*&lt;/code&gt;&lt;/strong&gt;运算符已重载, 对向量而言分别是叉乘和点乘, 下同.&lt;br&gt;
根据前面&lt;a href="#1.1"&gt;1.1节&lt;/a&gt;，&lt;strong&gt;&lt;code&gt;R_z&lt;/code&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;code&gt;R_sp_z&lt;/code&gt;&lt;/strong&gt;分别为当前机体Z轴和目标机体姿态Z轴在大地坐标系中坐标向量. 其叉乘与此两向量垂直，即为使当前机体的Z轴和目标姿态的Z轴重合的旋转的旋转轴在大地坐标系中的向量，与&lt;strong&gt;&lt;code&gt;R.transposed()&lt;/code&gt;&lt;/strong&gt;相乘后，所得&lt;strong&gt;&lt;code&gt;e_R&lt;/code&gt;&lt;/strong&gt;即为此旋转轴在当前机体坐标系内的坐标向量. 根据向量叉乘及点乘定义，容易理解&lt;code&gt;e_R_z_sin&lt;/code&gt;, &lt;code&gt;e_R_z_cos&lt;/code&gt;分别为当前机体Z轴与目标机体Z轴夹角的正弦值和余弦值.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;R_sp(2, 2)&lt;/code&gt;&lt;/strong&gt;为目标机体姿态Z轴与大地z轴夹角的余弦值. &lt;strong&gt;&lt;code&gt;yaw_w&lt;/code&gt;&lt;/strong&gt;将在后面作为一个权重值使用, 稍后解释.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/* calculate rotation matrix after roll/pitch only rotation */&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R_rp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e_R_z_sin&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* get axis-angle representation */&lt;/span&gt;
        &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;e_R_z_angle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atan2f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e_R_z_sin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e_R_z_cos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_R_z_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;e_R_z_sin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;e_R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R_z_axis&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;e_R_z_angle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* cross product matrix for e_R_axis */&lt;/span&gt;
        &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e_R_z_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R_z_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R_z_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e_R_z_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e_R_z_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;e_R_cp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R_z_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="cm"&gt;/* rotation matrix for roll/pitch only rotation */&lt;/span&gt;
        &lt;span class="n"&gt;R_rp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_I&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e_R_cp&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;e_R_z_sin&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e_R_cp&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;e_R_cp&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;e_R_z_cos&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* zero roll/pitch rotation */&lt;/span&gt;
        &lt;span class="n"&gt;R_rp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;e_R_z_sin&lt;/code&gt;为非负值(因叉乘定义中两向量夹角范围为0~180°), 因此若Z轴存在误差, 第6~9行代码计算从当前姿态旋转到rp姿态的旋转轴向量(单位化), 以及旋转角, &lt;code&gt;e_R&lt;/code&gt;即为从当前姿态到rp姿态的各姿态轴误差. 注意这几行代码的向量均在当前姿态坐标系内.&lt;/p&gt;
&lt;p&gt;第12~22行代码即根据此旋转轴和旋转角度, 利用罗德里格旋转公式计算旋转矩阵. 第22行等式右侧最外层括号中即为rp姿态到当前姿态的旋转矩阵, 乘以R后, &lt;strong&gt;&lt;code&gt;R_rp&lt;/code&gt;&lt;/strong&gt;即为rp姿态坐标系至大地坐标系的旋转矩阵. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/* R_rp and R_sp has the same Z axis, calculate yaw error */&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R_sp_x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;R_rp_x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R_rp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R_rp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;R_rp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;e_R&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atan2f&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;R_rp_x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;R_sp_x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;R_sp_z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;R_rp_x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;R_sp_x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;yaw_w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e_R_z_cos&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;0.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="cm"&gt;/* for large thrust vector rotations use another rotation method:&lt;/span&gt;
&lt;span class="cm"&gt;         * calculate angle and axis for R -&amp;gt; R_sp rotation directly */&lt;/span&gt;
        &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Quaternion&lt;/span&gt; &lt;span class="n"&gt;q_error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;q_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_dcm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transposed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;R_sp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_R_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;q_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0f&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;q_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;2.0f&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q_error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imag&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;2.0f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="cm"&gt;/* use fusion of Z axis based rotation and direct rotation */&lt;/span&gt;
        &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;direct_w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R_z_cos&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;e_R_z_cos&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;yaw_w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;e_R&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e_R&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0f&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;direct_w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e_R_d&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;direct_w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此段代码中第2~4行首先计算目标姿态Z轴与当前姿态Z轴误差角度. 前面提到过&lt;code&gt;yaw_w&lt;/code&gt;为目标姿态Z轴与大地坐标系z轴夹角余弦值的平方, 为一权重值. 当两轴夹角为0时, &lt;code&gt;yaw_w&lt;/code&gt;为1; 两轴夹角为90°, 由于欧拉角的奇异点, yaw与pitch重合, 无需控制yaw, 此时&lt;code&gt;yaw_w&lt;/code&gt;为0. 明白这一点, 这三行代码也就不难理解了.&lt;/p&gt;
&lt;p&gt;若目标姿态Z轴与当前姿态Z轴相差角度较小(±90°), 根据旋转两次的方法计算出的e_R向量即为最终的个姿态轴误差向量.&lt;br&gt;
若目标姿态Z轴与当前姿态Z轴相差角度较大(90~270°), 可仅考虑一次旋转(不需要中间的rp姿态), 利用四元数直接计算三轴误差角度.&lt;/p&gt;
&lt;p&gt;第9~11行代码通过四元数计算出从当前姿态到目标姿态的旋转轴和旋转角度, 从而直接得出三个姿态轴的误差角度向量&lt;strong&gt;&lt;code&gt;e_R_d&lt;/code&gt;&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;第14~15行代码: 将通过两种不同方法计算出的误差角度向量&lt;strong&gt;&lt;code&gt;e_R_d, e_R&lt;/code&gt;&lt;/strong&gt;以各自权重组合, 计算得到最终的误差角度向量(此处不是特别明白).&lt;/p&gt;
&lt;p&gt;至此, 已完全计算得出姿态轴角度误差, 接下来根据此误差计算出目标角速率.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="cm"&gt;/* calculate angular rates setpoint */&lt;/span&gt;
    &lt;span class="n"&gt;_rates_sp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;att_p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;emult&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e_R&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="cm"&gt;/* limit rates */&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_v_control_mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flag_control_velocity_enabled&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_v_control_mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flag_control_manual_enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;constrain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto_rate_max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto_rate_max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;constrain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mc_rate_max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mc_rate_max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* weather-vane mode, dampen yaw rate */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_v_att_sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disable_mc_yaw_control&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;_v_control_mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flag_control_velocity_enabled&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_v_control_mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flag_control_manual_enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;wv_yaw_rate_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto_rate_max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtol_wv_yaw_rate_scale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;constrain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wv_yaw_rate_max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wv_yaw_rate_max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// prevent integrator winding up in weathervane mode&lt;/span&gt;
        &lt;span class="n"&gt;_rates_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="cm"&gt;/* feed forward yaw setpoint rate */&lt;/span&gt;
    &lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;_v_att_sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yaw_sp_move_rate&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;yaw_w&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yaw_ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="cm"&gt;/* weather-vane mode, scale down yaw rate */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_v_att_sp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;disable_mc_yaw_control&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;_v_control_mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flag_control_velocity_enabled&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;_v_control_mode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flag_control_manual_enabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;wv_yaw_rate_max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;auto_rate_max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;_params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vtol_wv_yaw_rate_scale&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;constrain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_rates_sp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;wv_yaw_rate_max&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wv_yaw_rate_max&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// prevent integrator winding up in weathervane mode&lt;/span&gt;
        &lt;span class="n"&gt;_rates_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以上代码相对比较简单, 对角度误差进行比例控制得到目标角速率, 进行饱和抑制, 并对yaw另单独进行前馈控制. &lt;/p&gt;
&lt;h4 id="2.2.2"&gt;2.2.2 角速率误差控制&lt;/h4&gt;

&lt;p&gt;上节中我们已经得到目标角速率, 当前角速率可由姿态估计模块给出, 角速率误差控制环节的输入即为此两角速率. 输出为各姿态轴控制命令. 对照代码容易看出其控制框图如下, 此处不再列出源代码:
&lt;center&gt;&lt;img src="/images/pixhawk_control_law/2.3control_rates.png" alt = "control_rates" /&gt;&lt;/center&gt;
此处需要注意除了&lt;span style="color: Green;"&gt;前馈环节&lt;/span&gt;以外, 图中&lt;span style="color: Red;"&gt;PI控制器&lt;/span&gt;以及&lt;span style="color: Blue;"&gt;微分环节&lt;/span&gt;并不是典型的PID控制器, 因为&lt;span style="color: Blue;"&gt;此微分环节&lt;/span&gt;的输入为当前角速率, 而非角速率误差. 可如此理解&lt;span style="color: Blue;"&gt;此微分环节&lt;/span&gt;的作用, 若当前角加速度过大, 应加以控制使其减小, 即对当前角速率进行微分负反馈. &lt;/p&gt;</content><category term="Pixhawk"></category><category term="控制算法"></category></entry><entry><title>三国时期历史地图</title><link href="https://oneWayOut.github.io/articles/du-shu-bi-ji/ThreeKindom/" rel="alternate"></link><published>2016-07-01T00:00:00+08:00</published><updated>2016-07-01T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2016-07-01:/articles/du-shu-bi-ji/ThreeKindom/</id><summary type="html">&lt;p&gt;整理出了三国时期重要历史事件相关的地图&lt;/p&gt;</summary><content type="html">&lt;p&gt;昨晚整理电脑资料时发现以前记录三国历史地图的一份word文档，还挺有趣。想起了当时看裴松之注三国志，因为不知道书中很多地名的位置，影响对历史的理解，所以就整理了这样一份文档。比如东汉十三州各自地域方位？赤壁之战中的提到的苍梧，柴桑在哪？魏延多次劝说诸葛亮从子午谷出兵，直捣长安，这个子午谷在秦岭何处？周围地理形势如何？　准确知道这些很重要，比如三国演义中的“过五关斩六将”纯属虚构，不懂历史地理就可能被小说轻易骗过。&lt;/p&gt;
&lt;p&gt;本文主要整理自此&lt;a href="http://book.pans.cn/%C6%E4%CB%FB%C0%FA%CA%B7%CA%E9%BC%AE/%D7%A8%CC%E2%C0%E0/%BE%FC%CA%C2/%C8%FD%B9%FA%D6%F8%C3%FB%D5%BD%D2%DB%B5%D8%CD%BC/"&gt;网址&lt;/a&gt;, 修改了个别错别字及词句，调整了部分版式以使章节更清晰, 并增加了第0节的两张大图。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#0"&gt;0. 三国行政地形&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1"&gt;1. 黄巾起义&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2"&gt;2. 群雄割据&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3"&gt;3. 曹魏&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.1"&gt;3.1 对袁术、张绣、吕布、张扬之战&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.2"&gt;3.2 官渡之战&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.2.1"&gt;3.2.1 曹操防御部署&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.2.2"&gt;3.2.2 曹操决战前击破刘备&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.2.3"&gt;3.2.3 袁绍屯军延津期间作战&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.2.4"&gt;3.2.4 战役经过及夜袭乌巢&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.3"&gt;3.3 肃清北方&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#４"&gt;４. 孙吴&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#4.1"&gt;4.1 孙策渡江前江东割据形势&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#4.2"&gt;4.2 开拓江东&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#５"&gt;５. 赤壁之战&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#5.1"&gt;5.1 战略部署&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#5.2"&gt;5.2 战争结局&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#6"&gt;6. 三国鼎立&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#7"&gt;7. 刘备袭取益州&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#8"&gt;8. 樊城、江陵之战&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#9"&gt;9. 夷陵之战&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#9.1"&gt;9.1 陆逊反攻&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#9.2"&gt;9.2 吴军部署&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#9.3"&gt;9.3 作战进过&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#10"&gt;10. 诸葛亮平定南方及北伐&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#10.1"&gt;10.1 进军安南&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#10.2"&gt;10.2 五次伐魏&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#10.3"&gt;10.3 第一、二次北伐&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#10.4"&gt;10.4 第四、五次北伐&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#11"&gt;11. 三国统一&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#11.1"&gt;11.1 蜀军边防及魏军攻势&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#11.2"&gt;11.2 魏灭蜀&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#11.3"&gt;11.3 魏灭蜀作战经过&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#11.4"&gt;11.4 晋平吴&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="0"&gt;0. 三国行政地形&lt;/h2&gt;

&lt;p&gt;以下两图示意了三国时期各州郡县地理位置，及重要关隘城池地形。&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/东汉十三州.jpg"    alt="东汉十三州" /&gt;&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;&lt;img src="/images/threeKindoms/三国郡县.png"    alt="三国郡县" /&gt;&lt;/center&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2 id="1"&gt;1. 黄巾起义&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/01黄巾起义示意图.jpg"    alt="01黄巾起义示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;东汉末年政治腐败，统治阶级内部出现外戚和宦官之间争权夺位的斗争，相互轮番擅权，同时更加残酷地剥削压迫人民，皇族地主豪强强占土地，使之出现“馆舍布于州郡，田亩连于方国。”对人民加重征收赋税，加之旱灾，水灾连年发生，致使广大农民生活贫困，倾家荡产，“流离沟壑，嫁妻卖子”，到处出现“地广而不得耕，民众而无所食”的凄凉景象。劳动人民被逼得走投无路只好举起义旗，起来造反。公元184年，冀州农民在张角领导下首先起义，接着颍川和南阳等地农民起来响应，“旬日之间，天下响应，京师震动。”最后各地农民起义军在东汉朝廷和地方豪强武装的镇压下告败了。&lt;/p&gt;
&lt;h2 id="2"&gt;2. 群雄割据&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/02东汉末年群雄割据形势图.jpg"    alt="02东汉末年群雄割据形势图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;在镇压黄巾农民大起义的过程中，各地地主武装乘机扩大自己的势力，强占地盘，从而形成一股割据势力，“务相兼并以自强大”。如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公孙度，占据辽东。&lt;/li&gt;
&lt;li&gt;刘虞，公孙瓒，先后占据幽州。&lt;/li&gt;
&lt;li&gt;袁绍，占据冀州，青州和并州。&lt;/li&gt;
&lt;li&gt;曹操，占据兖州。&lt;/li&gt;
&lt;li&gt;孙策，占据江东。&lt;/li&gt;
&lt;li&gt;袁术，先占据南阳，后占据扬州一部分。&lt;/li&gt;
&lt;li&gt;刘表，占据荆州。&lt;/li&gt;
&lt;li&gt;刘焉，占据益州。&lt;/li&gt;
&lt;li&gt;张鲁，占据汉中。&lt;/li&gt;
&lt;li&gt;陶谦，刘备，吕布，先后占据徐州。&lt;/li&gt;
&lt;li&gt;董卓，李傕等，先后占据司隶。&lt;/li&gt;
&lt;li&gt;马腾，韩遂，占据凉州。&lt;/li&gt;
&lt;li&gt;张绣，占据宛。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="3"&gt;3. 曹魏&lt;/h2&gt;

&lt;h3 id="3.1"&gt;3.1 对袁术、张绣、吕布、张扬之战&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/03曹操对袁术、张绣、吕布、张杨之战示意图.jpg"    alt="03曹操对袁术、张绣、吕布、张杨之战示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安元年（196年）曹操把吕布逐出兖州，接着攻取陈国，迫降袁嗣，占领豫州，这时，在他的周围还有占据青、并、冀三州的袁绍、占据徐州的吕布、占据淮南的袁术，占据荆州的刘表、占据南阳的张绣和占据河内的张杨等割据势力。当时曹操占据的兖、豫二州处在敌对势力四面包围之中，曹操是处于内线作战、敌强我弱的不利态势。袁绍是主要的敌人，而吕布是凶恶的敌人，又担心袁绍勾结其他豪强，形成外线包围，合力并击。&lt;/p&gt;
&lt;p&gt;面对这种形势，曹操采取“先弱后强，各个击破”的战略方针，具体的策略是：&lt;strong&gt;羁縻袁绍，安抚吕布，厚结陈登，西抚关中，东联孙策，北抚渔阳&lt;/strong&gt;。在一切部署完之后，建安二年（197年），曹操便乘袁绍正在河北以全力攻幽州的公孙瓒，无暇南顾之机，开始各个击破的行动。原定计划先打吕布，恰逢这时袁术在寿春称帝，这是反汉的表面化。曹操的“奉天子以令不臣”，攻打袁术就师出有名了，九月，曹操攻打袁术，迫使其向淮南逃走，袁术不久就病死了。在曹操攻打袁术时，张绣和刘表的联军曾数次进攻叶县，威胁许昌，因此，曹操又回师进攻张绣。第二年三月，在安众设伏击败张绣、刘表的联军。同年十月，曹操东攻吕布，进占彭城，吕布退守下邳。曹操引水灌城，吕布投降，为曹操所杀。河内的张杨在曹操进攻吕布时，出兵野王，声援吕布，不久张杨被他的部将杨丑所杀。接着，眭固又杀了杨丑，投靠袁绍。建安四年（199年）四月，曹操派曹仁攻占射犬，杀了眭固，控制了河内郡。两年多的时间，曹操各个击败了袁术、张绣，消灭了吕布、眭固，改善了战略态势，逐步由弱转强，为全力对付袁绍创造了有利条件。&lt;/p&gt;
&lt;h3 id="3.2"&gt;3.2 官渡之战&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/04官渡之战示意图.jpg"    alt="04官渡之战示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安五年（公元200年），袁绍亲率十万大军，进抵黎阳，包围了曹军的白马。在众寡悬殊的情况之下，曹操先以精锐突袭白马的袁军，斩袁绍大将颜良，再败袁军于延津。随后派兵偷袭乌巢，烧毁袁军屯粮，使袁军完全失去斗志。最后，双方决战于官渡，曹军全歼袁军，取得重大军事胜利。此后不久，曹操便统一了北方。&lt;/p&gt;
&lt;h4 id="3.2.1"&gt;3.2.1 曹操防御部署&lt;/h4&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/05官渡之战中曹操防御部署要图.jpg"    alt="05官渡之战中曹操防御部署要图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安三年（198年）年底，曹操消灭吕布，大体统一了河南。四年春，袁绍消灭公孙瓒，统一了河北。这样北方形成了曹操与袁绍两大敌对势力，而大河南北这两地都是平原，地形连成一片，是一个完整的经济区，不可能长期分裂下去。袁、曹双方通过战争统一北方势在必行。&lt;/p&gt;
&lt;p&gt;战争爆发前夕，总的形势是袁绍势力大而比较落后，曹操势力较小而比较进步&lt;/p&gt;
&lt;p&gt;袁绍采纳郭图、审配的意见，策定了“立即进攻，集中兵力，直捣许昌”的作战方针，并进行了战略部署。&lt;/p&gt;
&lt;p&gt;曹操采纳郭图的意见（原文有误,应为荀攸），指导思想是在以弱抗强总形势下，发挥作战指导优势，以智取胜，决心率精兵二万，抗击袁绍。为了争取战略上的主动，在建安四年（199年）八月，进军黎阳，先后作如下部署:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;前线部署&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;命河内太守魏种牵制袁绍从并州方面进攻，保障左翼侧；&lt;/li&gt;
&lt;li&gt;命建武将军夏侯惇率部防守敖仓，派一部防守孟津，以掩护左侧安全；&lt;/li&gt;
&lt;li&gt;命平虏校尉于禁率领步骑两千驻守延津，东郡太守刘延，扼守白马，共同阻击南下的袁军；&lt;/li&gt;
&lt;li&gt;继续留东平相知兖州事程昱率兵七百人防守甄城，以保障右翼安全；&lt;/li&gt;
&lt;li&gt;命琅琊相臧霸率精兵入青州，攻下齐、北海等地以牵制袁军；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;九月，曹操分兵官渡，命裨将军徐晃，张辽率步骑万人布置防线，以阻挡袁军，自己回到许昌；十二月，曹操率关羽，乐进、许褚诸将及郭嘉、荀攸诸谋士移驻官渡，组织防御，指挥战斗。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;二线配置&lt;/strong&gt;：&lt;/li&gt;
&lt;li&gt;命厉锋校尉领广阳太守曹仁防守阳翟，以掩护左侧背；&lt;/li&gt;
&lt;li&gt;命蔡阳率部驻守叶县，以防止汝南黄巾军刘辟、龚郝等部；&lt;/li&gt;
&lt;li&gt;命杨武中部将曹洪率部驻守宛县，以防御荆州刘表；&lt;/li&gt;
&lt;li&gt;命裨将军李通率部与汝南太守蒲宠驻守汝南，以备孙策；&lt;/li&gt;
&lt;li&gt;命侍中兼尚书令荀彧镇守许昌，知后方诸事；&lt;/li&gt;
&lt;li&gt;命司隶校尉兼督关中盐运使司钟繇督运关中粮草；十一月，加派卫觊到关中，统制盐政，招抚流民，进行屯垦；&lt;/li&gt;
&lt;li&gt;命督军校尉颍川太守夏侯渊督运粮草；&lt;/li&gt;
&lt;li&gt;命典农中农将、长水校尉任峻典选军器与粮运；
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;曹操采取“以逸待劳、后发制人”的作战方针，把决战地点选在官渡是完全正确的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以双方兵力和态势上看：袁绍兵多，曹操兵少。千里黄河，袁军处处可渡。曹操如果分兵把口，防不胜防。何况青州在黄河南岸，已为袁绍所据有，沿防设防，态势不利。&lt;/li&gt;
&lt;li&gt;从曹操的作战方针来看：他采取的是决战防御。在削弱敌人后，寻求战机与袁军决战，而不是消极防御，如沿河设防，就限制了自己的机动。不如后退一步，主动选定于己有利，于战不利的战场，集中兵力，待袁军师老兵疲之后，与之决战。&lt;/li&gt;
&lt;li&gt;从地形上看：官渡地处鸿沟上游，为汴水的起点。当时，鸿沟运河西连巩洛，东下淮泗，而官渡实为枢纽。荀彧给曹操的信上也认为扼守住官渡是“扼其喉而不得进”。可见，官渡在东汉末年是许昌北面的门户，是一个重要的渡口，也是保卫许昌的屏障。&lt;/li&gt;
&lt;li&gt;后勤供应上看：退守官渡，靠近许昌，曹军的供应方便；反之，使袁军的补给线延长，供应不便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="3.2.2"&gt;3.2.2 决战前曹操击破刘备&lt;/h4&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/06官渡决战前曹操击破刘备之战示意图.jpg"    alt="06官渡决战前曹操击破刘备之战示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安四年（199年）十二月，正当曹操部署对袁绍作战的时候，原来依附曹操的刘备在奉命击退袁术以后，估计曹操大敌当前，无力东顾，决心叛曹，他杀曹操所命徐州剌史车胄，而后占据徐州，他和袁绍相呼应，东海及附近郡、县也大多依附刘备，军队增至数万人。曹操深知刘备叛变是侧后的绝大隐患，不可轻视，为了避免两面作战，必须迅速击溃刘备。建安五年（200年）正月，曹操亲率精兵兼程，袭击刘备，迅速占领沛县，攻陷彭城和下邳，刘备军队来不及集中，导致全军溃散，妻儿、关羽被俘，张飞落草，刘备只身逃往河北，北投袁绍。&lt;/p&gt;
&lt;p&gt;这时，袁绍以他儿子有病为借口，不采纳田丰所提出的乘曹操东攻刘备之机偷袭许都的建议，而是按兵不动，失去了乘虚袭击曹操后方的机会。直到曹操回军官渡后，袁绍才考虑攻打许昌，这时许昌已不再空虚，良机已经丧失。&lt;/p&gt;
&lt;h4 id="3.2.3"&gt;3.2.3 袁绍屯军延津期间作战&lt;/h4&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/07袁绍屯军延津期间作战指导要图.jpg"    alt="07袁绍屯军延津期间作战指导要图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安五年（200年）二月，袁绍进军黎阳，派颜良围攻白马，以保障主力渡河。曹操采用声东击西的战法，袭东颜良，率军南撤。袁绍派文丑渡河追击，又被曹操设伏击杀。曹操回军官渡。&lt;/p&gt;
&lt;p&gt;袁绍屯兵延津，派遣刘备自延津绕道趋汝南，协同汝南黄巾军刘辟、龚都等部击斩蔡阳于叶县，进至濦强，袭扰曹军的后方根据地许昌；另派越骑司马韩荀为别部，率千余骑兵绕道敖仓以西，进入嵩山以后，以切断曹军后方补给线，均被曹仁击败。&lt;/p&gt;
&lt;p&gt;七月，袁绍继续进军阳武，企图寻求曹军的主力决战。&lt;/p&gt;
&lt;p&gt;八月，袁军的主力逼近官渡，两军对峙，相持数月。&lt;/p&gt;
&lt;p&gt;袁绍在战役指导上，单纯地实施正面突破，未采取战役、战术上的迂回、包围、奇袭，调动曹军脱离既设阵地，以求决战。把十万大军摆在官渡，形成对阵顶牛。虽曾派遣刘备去袭扰曹操的后方，又派韩荀去切断曹军后方补给线，但派出的兵力单薄，都没有应援部队，以至牵制不成功，粮道未切断，刘备败走，韩荀殉职，袁绍也就放弃分兵出击了，后来许攸建议袭击许昌，袁绍未采纳，结果良机坐失，陷入被动，而这时的曹操采纳贾诩等人建议，加强防守，坚持危局，寻求战机，以击败袁军。&lt;/p&gt;
&lt;h4 id="3.2.4"&gt;3.2.4 战役经过及夜袭乌巢&lt;/h4&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/08袁曹官渡之战战役经过及夜袭乌巢示意图.jpg"    alt="08袁曹官渡之战战役经过及夜袭乌巢示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安五年（200年）十月，袁绍派车运粮，并令淳于琼等五将率兵万人担任掩护，屯积于袁军大营以北四十里的故市、乌巢。沮授建议派蒋奇率军驻扎在粮库为外侧以防曹操的抄袭，袁绍不听，这时，袁绍谋士许攸因家属在邺城犯法被扣押，便一怒之下，投奔曹营，受到曹操的热情接待。许攸密报说，袁绍辎重车万乘在乌巢，屯军戒备不严，可用轻兵前去偷袭，出其不意，烧掉粮草，不出三天，袁军自败。&lt;/p&gt;
&lt;p&gt;许攸提供的这个情报，正符合曹操寻求战机，出奇制胜的作战意图，他当机立断，决心夜袭乌巢，焚烧袁绍的粮草。他留曹洪、荀攸坚守大营，亲自率领精锐步骑兵五千人，使用袁军的旗号，利用夜晚悄悄地从小路去偷袭乌巢，半夜到达后，即围攻放火，淳于琼退入营垒坚守。袁绍得知曹操夜袭乌巢后，随即决定用主力攻打曹操的大营，只派遣一部轻骑去救援乌巢。果然曹营坚固，攻打不下。曹操见袁绍援军赶到乌巢，便指挥将士拼命冲杀，大破淳于琼军队，烧毁乌巢全部粮草，斩杀淳于琼等，割下袁军千余人的鼻子及牛马唇舌，送到袁军大营，进行恐吓。袁军军心动摇，内部分裂。郭图害怕袁绍追究他献计的责任，便嫁祸给张郃。张郃在气愤之下，与高览一起烧了攻城器械，投降了曹操，曹军乘势出击，大败袁军。袁绍和他的儿子袁谭仓皇地带了八百骑兵退走河北。其余袁军在曹军包围下，前无进路，后有黄河，便都投降了。&lt;/p&gt;
&lt;h3 id="3.3"&gt;3.3 曹操肃清北方&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/09曹操肃清袁氏在北方残余势力及北征乌桓示意图.jpg"    alt="09曹操肃清袁氏在北方残余势力及北征乌桓示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安七年（202年）五月，袁绍在官渡之战失败后，忧虑过度，病情恶化，吐血而死。袁氏集团出现分裂危机。在此之前，袁绍战胜公孙瓒后，让儿子各据一州，长子袁谭据青州，二子袁熙据幽州，外甥高干据并州，幼子袁尚留在耳旁。袁绍死后，审配等人在邺城抢先拥立袁尚，长子袁谭只好接受事实。这年九月，曹操率军渡过黄河，进攻黎阳，开始统一河北的作战。当时袁谭防御黎阳，袁尚驻守邺城，后率军增援黎阳。建安八年（203年）三月，曹操再次攻占黎阳，袁氏兄弟出城迎战，大败，无力守城，在曹操包围前，连夜向北逃去，曹操占领黎阳。&lt;/p&gt;
&lt;p&gt;曹操攻占黎阳后，决心夺取袁氏集团的老巢邺城。建安八年（203年）四月，兵临邺城，袁尚、袁谭合力出城迎击，战败曹军。八月，曹操进驻西平，佯攻刘表。曹操退军，袁氏兄弟矛盾公开化，袁谭出兵攻袁尚，在邺城外郭城门，大败，退回南皮。袁尚来进攻，袁谭大败，逃奔青州平原郡。&lt;/p&gt;
&lt;p&gt;曹操采纳荀攸提出的乘二袁内乱北上攻打的建议，决定再次攻打邺城。建安九年（204年）二月开始，曹操联合袁谭势力，经过半年战斗歼灭了袁尚部，攻占了邺城。&lt;/p&gt;
&lt;p&gt;在袁氏余党日益衰落的形势下，曹操决心先消灭袁谭，次及袁熙、袁尚，统一冀、青二州未占领地区和幽州。建安九年（204年）十二月，曹操进军龙 ，袁谭退南皮，曹操向东进攻平原郡，夺取各县，统一青州。建安十年（205年）正月，曹操一举攻克南皮，斩杀袁谭、郭图，统一冀州。这时占据幽州的袁熙部将焦触，张南反戈攻击袁熙、袁尚，袁氏兄弟逃奔投靠辽西乌桓。 建安十一年（206年）正月，曹操以世子曹丕守邺城，亲自率兵进攻高干，三月，围降壶关，高干向匈奴求救，不成，高干与数骑逃亡，途中被捕杀，并州全部平定。&lt;/p&gt;
&lt;p&gt;建安十二年（207年）三月，曹操从邺城出发，北征乌桓。大军到达易县时，采纳郭嘉建议轻兵前进，以达成战略突然性。五月，到达无终，又接受田畴的建议，从无终退兵，迷惑敌人，暗地率大军上徐无山，直出卢龙塞，向塞外进军。又凿山填谷，拓宽五百里山路，通过平冈，东指柳城。八月，曹军登上白狼山，大败乌桓军，袁熙、袁尚逃奔辽东太守公孙康，曹操占领柳城。九月，曹操以柳城退兵，途中，公孙康派人送来袁尚、袁熙等人首级。建安十三年（208年）正月，曹操回到邺城，结束了北征。&lt;/p&gt;
&lt;h2 id="4"&gt;4. 孙吴&lt;/h2&gt;

&lt;h3 id="4.1"&gt;4.1 孙策渡江前江东割据形势&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/10孙策渡江前江东扬州地区郡守割据形势略图.jpg"    alt="10孙策渡江前江东扬州地区郡守割据形势略图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
当曹操在兖州，袁绍在冀州消灭割据势力，扩充地盘时，江东扬州地区的割据形势是:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;扬州刺史刘繇割据曲阿，派遣他的部将樊能、于糜、张英等扼守横江，当利口，以抗拒袁术派遣的督军中郎将吴景；&lt;/li&gt;
&lt;li&gt;彭城相薛礼据守秣陵，下邳相笮融据守秣陵东南，两人都依于刘繇；&lt;/li&gt;
&lt;li&gt;吴郡太守许贡割据吴郡；&lt;/li&gt;
&lt;li&gt;会稽太守王朗割据会稽及其附近地区；&lt;/li&gt;
&lt;li&gt;庐江太守刘勋割据皖城；&lt;/li&gt;
&lt;li&gt;豫章太守诸葛玄（后为朱皓、华歆）据守豫章。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="4.2"&gt;4.2 开拓江东&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/11孙策开拓江东之战经过示意图.jpg"    alt="11孙策开拓江东之战经过示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;年仅二十一岁的孙策用兵“猛锐神速，所向皆破，莫敢当其锋”。他率部由历阳渡江，迅速击破樊能、张英各部，乘胜进攻秣陵，大破笮融、薛礼的部队，然后转而攻取丹阳、江乘等地，进击刘繇于曲阿。刘繇败走丹徒，继又西走豫章。&lt;/p&gt;
&lt;p&gt;进击吴郡许贡时，他不由曲阿直取吴郡，而是先夺取钱塘，使吴郡许贡不能与会稽王朗构成联盟，以相抗拒，然后转移兵力北上，一举击灭许贡，攻占吴郡。&lt;/p&gt;
&lt;p&gt;攻打会稽王朗时，他率军急渡钱塘江，分王朗的部队相持于固陵。王朗“负阻城守，难可卒拔”。孙静建议从固陵南面的查渎绕道袭取王朗的后方。他采纳后，命令夜间在固陵正面多燃火种，以为疑兵，而分兵疾趋查渎道，袭击高迁屯，大破王朗军，乘胜穷追猛打，直到东冶，俘虏王朗。&lt;/p&gt;
&lt;p&gt;西击刘勋、黄祖时，他采取“调虎离山”、“攻城阴援”的战役指导。当他得知刘勋将远离皖城去袭取上缭时，便设计先袭击刘勋。他派遣使者卑辞厚礼，致书刘勋。刘勋接信后很高兴，不听谋士刘晔的劝谏，亲自率军潜入彭泽，远袭上缭。孙策探知刘勋已离皖城，即扬言引兵西击黄祖，溯江而上。到达石城时，派遣从兄孙贲、孙辅率领八千人进据彭泽，阻止刘勋回师，亲自与周瑜率兵二万人袭取皖城，俘获刘勋妻子及部曲三万人。刘勋闻讯率军回救，行至彭泽，遭到孙军的邀击，败走流圻。黄祖派遣其子黄射率水师五千增援刘勋，被孙策击破，孙策乘胜追击黄祖于夏口，迫使他退守沙羡。&lt;/p&gt;
&lt;p&gt;取豫章郡时，他采取“先声后实”的战役指导，选派遣太史慈去侦察豫章情况，察知豫章太守华歆只求保全自己，不堪一击，他亲率大军进逼椒丘，再派虞翻去劝说华歆，晓以利害。孙策兵临城下，华歆果然开城请降。&lt;/p&gt;
&lt;h2 id="5"&gt;5. 赤壁之战&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/12赤壁之战示意图.jpg"    alt="12赤壁之战示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安十二年（公元207年），曹操率军南下攻打荆州。刘琮投降，刘备率军退至江陵。曹军在当阳长坂将刘备部队打败，直抵江陵。刘备遂转道汉津，逃往夏口，派诸葛亮出使东吴，联吴抗曹。&lt;/p&gt;
&lt;p&gt;建安十三年（公元208年），曹操率二十万大军，从江陵出发，顺江东下，与孙权刘备联军会战于赤壁。周瑜利用曹军不习水战，战船首尾相接的弱点，使黄盖前去诈降，当黄盖水军接近曹军战船时便顺风纵火，大败曹军于乌林。曹操率残部从华容逃回北方。孙刘联军取胜。&lt;/p&gt;
&lt;h3 id="5.1"&gt;5.1. 赤壁之战的战略部署&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/13赤壁之战曹军与孙刘联军战略部署示意图.jpg"    alt="13赤壁之战曹军与孙刘联军战略部署示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安十二年（208年）七月，曹操平定乌桓，统一北方后，便挥师南下，直取荆州。当时正值刘表新亡，荆州无主，他迫降刘表次子刘琮，追击刘备于当阳长坂坡，迫使他沿汉水改向夏口方向退却，曹操乘胜占领江陵，基本上控制了荆州北部。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;曹操轻易取得荆州后，妄图沿汉水和长江顺江东下攻打孙权席卷江东，统一全国。为此他作了如下战略部署：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;曹操亲率在荆州的水陆军主力从江陵出发，沿长江向夏口进击；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;另以一部水陆军由襄阳出发，沿汉水向夏口前进；&lt;/li&gt;
&lt;li&gt;命后军都督，征南将军曹仁，军粮督运使夏侯渊驻守江陵；&lt;/li&gt;
&lt;li&gt;命厉锋将军曹洪驻守襄阳；&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命汉侍中尚书令荀彧、汉前将军夏侯惇留守许昌； 
面对曹军的东下，在鲁肃和诸葛亮的劝说下，孙权和刘备结成联盟，抗击曹操。孙权任命周瑜、程普为左右军都督，率军与刘备会师，并任命鲁肃为赞军校尉，协助筹谋策划。周瑜率精兵三万沿长江西上，以迎击曹军，孙权亲自统率后方诸军以为策应。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;孙权军队的编组与战役部署是：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前锋：丹阳都尉黄盖；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;本队：当口令甘宁、横野中郎吕蒙、中郎将韩当、宜春长周泰、征虏将军孙贲、竞威校尉陆逊、武猛校尉潘璋等；&lt;/li&gt;
&lt;li&gt;水陆军左都督周瑜、右都督程普、赞军校尉鲁肃；&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后方守军：给事朱桓防守柴桑，以备援各方。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刘备军队在樊口时的兵力和部署如下：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关羽率水军约万人驻在夏口；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;张飞、赵云各率陆军四千人驻在鲁山；&lt;/li&gt;
&lt;li&gt;刘琦率军万余人驻在樊口；&lt;/li&gt;
&lt;li&gt;刘备本人在樊口。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;周瑜率军到樊口与刘备会合后，继续沿江西上，与顺流东下的曹军在赤壁交战，曹军初战失利，退据乌林，与孙刘联军隔江对峙。因曹军大部分是北方人，不惯于水上风浪颠簸，便用铁环将战船首尾联结起来，周瑜采用黄盖火攻的建议，命黄盖诈降，用蒙冲斗舰十艘暗载燃烧器材驶向北军水寨纵火。曹军营寨大乱，人马烧死溺死无数。曹军分水、陆两路向江陵撤退。刘备、周瑜率兵水陆并进，追击到南郡。曹操命曹仁，徐晃守江陵，乐进守襄阳，自己率余部退回北方。&lt;/p&gt;
&lt;h3 id="5.2"&gt;5.2. 赤壁之战的战争结局&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/14赤壁之战战争结局示意图.jpg"    alt="14赤壁之战战争结局示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
建安十三年（208年）十二月，孙、刘联军攻占江陵，其战役部署是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;周瑜、程普率吴军主力屯兵于长江南岸，与北岸的江陵城内曹军相对峙。&lt;/li&gt;
&lt;li&gt;甘宁率兵逆流而上直取夷陵，以开通江路。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;刘备在赤壁战后乘机略取了荆州在江南的长沙、零陵、武陵、桂阳四郡，并命诸葛亮为军师中郎将，都督零陵、武陵、长沙三郡调其赋税，以充军食。命偏将军赵云为桂阳太守。为配合周瑜攻取江陵城，共同分兵进攻江陵侧后，刘备命张飞率一千骑卒归周瑜指挥，以周瑜分出二千士卒加强备军，沿夏水向江陵侧后迂回，刘备占据襄阳和江陵之间汉水以西的临沮，旌阳数县，同时令关羽沿沔水北上，占领汉水以东各县，阻止襄阳曹军向江陵增援。曹军随即对关羽发动进攻，乐进从襄阳南下，文聘以江夏北上，双方在寻口夹击关羽取胜。江陵守将曹仁屡战不利，伤亡很大。建安十四年（209年）十二月，曹操下令放弃江陵，令乐进等南下接应曹仁撤出，周瑜占领了南郡治所江陵。&lt;/p&gt;
&lt;h2 id="6"&gt;6. 三国鼎立&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/15三国鼎立图.jpg"    alt="15三国鼎立图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;赤壁战后，曹操进兵关中，打败韩遂，马超，占有凉州。建安二十年（公元215年），又进兵汉中，张鲁投降，次年，曹操称魏王。建安二十五年（公元220年）曹操死，其子曹丕废汉献帝，自称皇帝，改国号为魏，都洛阳。&lt;/p&gt;
&lt;p&gt;刘备借赤壁之战的胜利，占有荆州南部四郡（武陵，长沙，桂阳，零陵），并从孙权手中借得南郡部分地区。建安十九年（公元214年）刘备西攻益州取胜，自领益州牧。建安二十四年（公元219年），刘备大将黄忠破斩曹军降领夏侯渊，夺取汉中，刘备自称汉中王。建安二十六年（公元221年）刘备在成都称帝，国号汉，史称蜀汉。&lt;/p&gt;
&lt;p&gt;孙权在赤壁战后重点向南发展。建安十五年（公元210年）派步骘向岭南进军，占据交州。次年，孙权将都城从京口迁到秣陵，并建石头城，改名建业。黄武元年（公元222年），孙权称吴王，公元229年正式称帝，国号吴，都建业。&lt;/p&gt;
&lt;h2 id="7"&gt;7 刘备袭取益州&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/16刘备袭取益州作战经过要图.jpg"    alt="16刘备袭取益州作战经过要图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;刘备据有荆州后，便按隆中对策规定的战略进取益州。当时占据益州的刘璋在南北之争中，不再倒向曹操。赤壁之战曹操失败后，益州别驾张松劝刘璋结好刘备。建安十六年（211年）十二月，刘璋接受张松建议派军议校尉法正率四千人去荆州迎接刘备入蜀，法正向刘备秘密献策并呈献西川地图，在法正和庞统的谋议下，刘备策定入蜀部署：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;留诸葛亮、关羽和张飞镇守荆州；&lt;/li&gt;
&lt;li&gt;以赵云领留营司马，掌管留营军事；&lt;/li&gt;
&lt;li&gt;自与庞统、法正、黄忠和魏延等率步卒数万人入益州。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;刘备到达涪城，刘璋率步骑三万人前来迎接，刘璋命刘备进击张鲁，并指挥白水军杨怀、高沛的军队。于是刘备率三万人北到葭萌，但并未立即去进击张鲁，刘备在葭萌屯兵一年，庞统向刘备陈献袭取成都的上、中、下三策。刘备采纳中策，一面准备行装，一面致书刘璋，要求刘璋资助他一万士兵及粮草军资。刘璋只答应给一半。这时张松的哥哥广汉太守张绣向刘璋捣发张松与刘备勾结的阴谋，于是刘璋捕杀张松，并通令各关戍诸将，不许再放刘备通过。刘备利用杨怀、高沛前来送行之机，借口他们无主客之礼，捕杀杨、高二人，并作如下处置和部署，向成都进军：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;率部进占杨怀、高沛所据守的关口，收编其部众，并留质诸将士妻子；&lt;/li&gt;
&lt;li&gt;召命诸葛亮由荆州率兵入蜀，会师成都；&lt;/li&gt;
&lt;li&gt;留中郎将霍峻统率数百人驻守葭萌；&lt;/li&gt;
&lt;li&gt;派遣黄忠为前锋；&lt;/li&gt;
&lt;li&gt;亲自统率主力部队在后续进。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;刘备军所过辄克，进至涪城，先后击溃张任、邓贤、李严、费观等部，于建安十八年（213年）五月，进围雒城。建安十九年（214年）四月，诸葛亮奉刘备召命，留关羽镇守荆州，自与张飞、赵云率兵溯江西上，到达江州后，分遣赵云攻取江阳、犍如；张飞攻取巴西、德阳各郡县，之后，向成都进军，和刘备会师。&lt;/p&gt;
&lt;p&gt;当时刘备围攻雒城已将一年，犹未攻下，庞统在围城之战中被流矢射死。雒城不久攻克，刘备乘势进围成都，诸葛亮、张飞、赵云各部也前来会师。刘璋开城出降，刘备取得益州。&lt;/p&gt;
&lt;h2 id="8"&gt;8 樊城、江陵之战&lt;/h2&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/17樊城、江陵之战作战经过示意图.jpg"    alt="17樊城、江陵之战作战经过示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建安二十四年（219年）五月，刘备夺取了汉中，又派孟达、刘封占领了汉中郡东部的房陵、上庸，势力更加扩大。七月，孙权又进攻合肥，曹操的各州兵马，东调淮南，与孙权作战。留守荆州的关羽利用这有利的形势，留南郡太守糜芳守江陵，将军傅士仁守公安，亲率主力北攻樊城。当时，曹操方面由曹仁镇守樊城，于禁、庞德等军驻在樊城北侧，徐晃驻在南阳，相机策应曹仁。八月，大雨，汉水泛滥，关羽利用水势攻打于禁，于禁等七军被水淹没，于禁投降，庞德被杀，曹军数万人被俘。关羽乘势围攻樊城，又派一部攻打襄阳。关羽先头部队进占偃城。陆泽人民也起来反曹，响应关羽，这时关羽“威震华夏”，曹操感到不安，准备迁都。早在关羽进攻樊城时，东吴大将吕蒙就提出乘机夺回荆州。孙权以治病为名调吕蒙回建业，以麻痹关羽，密谋袭取荆州的作战方案。接着根据吕蒙意见，派陆逊接替吕蒙镇守陆口。陆逊又写信给关羽，恭维他，进一步麻痹关羽。关羽中计，不再防备东吴，同时还把后方预备部队抽调一些去增援樊城前线。此时，关羽俘获于禁部队人马数万人，因粮食缺乏，擅取了东吴屯积在湘水东岸关卡上的粮食以充军食。于是孙权以此为借口，命吕蒙率军袭击江陵。&lt;/p&gt;
&lt;p&gt;吕蒙率军进至浔阳时，率津右护军蒋钦、偏将军潘璋、朱然，平虏将军周泰、中郎将韩当、骑都尉虞翻诸将西上，把全部精兵隐藏在大船中，使士兵都穿上白色的商人衣服摇橹，昼夜不停地溯江西上。吕蒙利用关羽军内部的矛盾，派人先后说降了傅士仁和糜芳，这样公安、江陵两个重镇就被吴军占领了。接着吕蒙派陆逊西进，攻占夷陵、秭归，切断关羽入川的退路。&lt;/p&gt;
&lt;p&gt;关羽得知南郡失守，即率军南撤，曹操下令曹仁不得追击，关羽派人去上庸，要刘封、孟达发兵前来支援，刘、孟以上庸初定为由，拒绝发兵。关羽自知势穷，不敢回江陵。十一月，西走麦城，士卒离散。十二月，到临沮，归路被吴将朱然、潘璋切断，关羽、关平父子被俘，并被斩首。孙权平定荆州。&lt;/p&gt;
&lt;h2 id="9"&gt;9. 夷陵之战&lt;/h2&gt;

&lt;h3 id="9.1"&gt;9.1 陆逊反攻&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/18夷陵之战陆逊反攻示意图.jpg"    alt="18夷陵之战陆逊反攻示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;公元222年七月，刘备为关羽报仇，率兵五六万东伐孙吴，刘备军进至猇亭，设立大本营，前部则到达夷道。孙吴降临陆逊面对强敌坚守不出，孙，刘双方在猇亭相持达六七个月。蜀军便沿长江南侧“树栅连营七百里”，陆逊利用蜀军士卒斗志涣散，便起兵反攻，火烧连营。刘备全军覆没被迫退回白帝城。&lt;/p&gt;
&lt;h3 id="9.2"&gt;9.2 吴军的战役部署&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/19夷陵之战吴军的战役部署要图.jpg"    alt="19夷陵之战吴军的战役部署要图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;孙权败盟袭取荆州，关羽被杀，对刘备是一个沉重的打击。使《隆中对》中所拟定的两路分兵，北取中原的战略计划遭到破产。刘备决心用武力夺回荆州。章武元年（221年）四月，刘备在成都称帝，建立汉国，史称蜀汉。六月，刘备将出兵东征孙权，命车骑将军张飞率军万人自阆中会师江州。临出发前，张飞被部将张达、范强杀害，持其首级奔降东吴。刘备留诸葛亮在成都辅佐太子刘禅守国，留赵云在江州为后军都督，亲自统率黄权、张南、冯习、吴班、陈式等将领和士卒四万多人东征。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;孙权在袭取荆州，击杀关羽之后，常虑刘备报复，对刘备的大举进攻早有防备：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把都城从建业迁到鄂，张名为武昌，以便扼守荆州；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;任命陆逊为镇西将军，镇守夷陵，所部李异、刘阿等进驻巫县、秭归，以加强西线防务；&lt;/li&gt;
&lt;li&gt;任命周泰为汉中太守、奋威将军，相机图取汉中；&lt;/li&gt;
&lt;li&gt;派遣使者到蜀汉，要求议和，重归于好；&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;派遣使者向曹魏称臣，以免两面受敌。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;刘备率军东下后，孙权又将军队重新作了部署：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;振威将军潘璋防守秭归；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;将军陆议防守巫县；&lt;/li&gt;
&lt;li&gt;将军李异防守巴山；&lt;/li&gt;
&lt;li&gt;郎将刘阿防守兴山；&lt;/li&gt;
&lt;li&gt;右护军镇西将军陆逊防守夷陵；&lt;/li&gt;
&lt;li&gt;将军宋谦督水军防守枝江；&lt;/li&gt;
&lt;li&gt;安东中郎将孙桓率万人防守夷道；&lt;/li&gt;
&lt;li&gt;昭武将军朱然防守江陵，偏将军韩当辅之；&lt;/li&gt;
&lt;li&gt;建武将军徐盛防守当阳；&lt;/li&gt;
&lt;li&gt;绥德将军诸葛瑾守公安；&lt;/li&gt;
&lt;li&gt;建中将军中郎将骆统防守孱陵；&lt;/li&gt;
&lt;li&gt;平武将军步骘、武陵郡都尉鲜于丹防守益阳；&lt;/li&gt;
&lt;li&gt;孙权在武昌督其余诸将士，以备向各方支援。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="9.3"&gt;9.3 吴蜀两军作战经过&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/20夷陵之战吴蜀两军作战经过示意图.jpg"    alt="20夷陵之战吴蜀两军作战经过示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;章武元年（221年）七月，刘备不听从赵云等人的谏阻发兵东攻，蜀军先头部队击败防守巫县的吴军，进占秭归。陆逊实施战略退却，一直退到夷道、猇亭。第二年正月，蜀军吴班、陈式的水军占领夷陵，屯兵长江两岸，刘备也进抵秭归，他派黄权为镇北将军，指挥江北诸军，以防魏军进击蜀军的翼侧。二月，蜀军主力进至猇亭，前部到达夷道，将孙桓的一部分吴军包围。刘备率大军从巫峡建营至夷陵界，一路立了五十多营，夹江连络，东西合围。&lt;/p&gt;
&lt;p&gt;陆逊对蜀军的作战方针是“诱敌深入，后发制人”。从三月开始，陆逊扼守阵地，坚不出战。刘备急于求战，派兵引诱，陆逊也不出击，两军相持半年后，陆逊发现刘备锐气已被遏止，便上书吴王，准备反攻。六月，陆逊在作试探性的进攻后，决定采用火攻，焚烧蜀军的营寨，蜀军大乱。陆逊乘势发起进攻，迅速地攻破了蜀军营寨四十余座，蜀军土崩瓦解，死者无数。刘备带领少数人马，乘夜突围，逃回白帝城。在江北的黄权，由于道路被截断，不能回蜀汉，被迫率部投降了曹魏。&lt;/p&gt;
&lt;h2 id="10"&gt;10 诸葛亮平定南方及北伐&lt;/h2&gt;

&lt;h3 id="10.1"&gt;10.1 进军安南&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/21诸葛亮安定南中进军路线示意图.jpg"    alt="21诸葛亮安定南中进军路线示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;南中地区包括蜀汉南部的越嶲、益州、永昌、牂柯四郡，是叟、青羌、僚、濮等夷越少数民族与汉族杂居的地方。&lt;/p&gt;
&lt;p&gt;刘备死后，南中出现不稳，益州郡大姓雍闿在东吴挑动下发动叛乱，越嶲郡的夷王高定和牂柯郡太守朱褒也先后据郡反蜀，响应雍闿。&lt;/p&gt;
&lt;p&gt;诸葛亮以遭逢国丧，不便加兵南中，于建兴二年（224年）春，关闭通往南中的灵关，以一年多时间，进行南征准备：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;平稳接管刘备权力，擢用大批名士，牢固掌握军政大权；&lt;/li&gt;
&lt;li&gt;“务农殖谷”，与民休息，积极创造物质条件； &lt;/li&gt;
&lt;li&gt;同吴国恢复联盟，使叛乱势力陷于孤立。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;诸葛亮认为，北伐前必须首先南征，以安定后方，为此贯彻“南抚夷越”的既定方针。在诸葛亮率军出发时，参军马谡向他提出了“攻心为上，攻城为下；心战为上，兵战为下”的建议，诸葛亮采纳了他的意见。&lt;/p&gt;
&lt;p&gt;蜀军的进军分为以下三路，最后会师益州郡:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;诸葛亮亲自率主力西路军由成都南下，沿江下到僰道，经安上进击越嶲的高定；&lt;/li&gt;
&lt;li&gt;令门下督马忠率偏师为东路军，从僰道进击牂柯朱褒；&lt;/li&gt;
&lt;li&gt;令降都督李恢率偏师为中路军，自驻地平夷向益州郡、雍闿进击，以吸引和牵制雍闿，等待诸葛亮主力军的到达。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建兴三年（225年）三月，蜀军南征。西路诸葛亮大军到达马湖江（今金沙江）北岸后，即经安上，沿江西上，向集结在旌牛、卑水、定笮等地筑垒防守的高定的军队突然发起进攻。结果高定被杀，蜀军占领越嶲郡。东路军马忠进入南中后，取道牂柯，击破反叛的太守朱褒，朱褒率军西逃。中路军李恢由平夷进至昆明时，由于兵力薄弱被当地少数民族包围，他扬言愿与南人合作。南人松懈戒备。李恢乘机出击取胜。同年五月，诸葛亮从越嶲以南渡泸水，深入人烟稀少的南中山区。这时益州郡的雍闿被高定部下所杀，继起的孟获抵抗蜀军，被俘获，诸葛亮请孟获观看蜀军营阵。孟获不服，放回再战。蜀军三路声势相连，诸葛亮七纵七擒孟获，孟获心悦诚服地投降。当年秋天，蜀军三路会师滇池，全部平定了南中的叛乱。&lt;/p&gt;
&lt;h3 id="10.2"&gt;10.2 五次伐魏&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/22诸葛亮五次攻魏进军路线示意图.jpg"    alt="22诸葛亮五次攻魏进军路线示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;诸葛亮安定南中后，便先后五次北伐中原，攻打曹操。&lt;/p&gt;
&lt;p&gt;公元228年，诸葛亮第一次率十万大军出祁山。南安，天水，安定三郡叛离曹魏降蜀，关中大震。不料街亭之役因马谡违背诸葛亮节度而遭致失败，三郡得而复失。&lt;/p&gt;
&lt;p&gt;同年冬，诸葛亮第二次率军数万，走故道，出散关，围陈仓，后因粮尽退兵。&lt;/p&gt;
&lt;p&gt;公元229年，诸葛亮第三次率军攻占武都，阴平二郡。&lt;/p&gt;
&lt;p&gt;公元231年，诸葛亮第四次率军出祁山，用新发明的木牛运粮，企图以祁山为据点，夺取陇右。魏将司马懿坚壁防御，迫使蜀军粮尽退兵。&lt;/p&gt;
&lt;p&gt;公元234年，诸葛亮第五次率军十万北伐，进军五丈原，屯田于渭水南岸，与司马懿对峙，司马懿采取以逸待劳的方针，坚壁不出，蜀魏两军相持一百多天。不久，诸葛亮积劳成疾，卒于军中，蜀汉退军。&lt;/p&gt;
&lt;h3 id="10.3"&gt;10.3 第一、二次北伐&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/23诸葛亮一、二次北伐示意图.jpg"    alt="23诸葛亮一、二次北伐示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;南中叛乱平定后，解除了后顾之忧，诸葛亮便“治戎讲武”，积极准备北伐。建兴五年（227年），诸葛亮乘曹丕病死、曹睿继位之机，率军进驻汉中，并向后主刘禅上了一个表章──《出师表》，同时调整了军政部署：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命前将军李严移驻江州，负责后方军政工作；&lt;/li&gt;
&lt;li&gt;命护军陈列驻扎永安以防东吴；&lt;/li&gt;
&lt;li&gt;命长史费祎(onewayout注：原文误为‘长生张裔’)、参军蒋琬总理国内行政事务；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当时，从汉中北进，必须经过几百里的高山险谷。自古以来，有两个方向四条通道。一个方向是出秦岭入关中。在这个方向上有二条通道：一是出秦岭子午道，进入关中；二是经秦岭褒斜道，出入斜谷，进入关中西部；这二条通道谷长路险，均有栈道，大军行动比较困难。另一个方向是往西经阳平关进入陇山，在这个方向上有二条通道；一是出阳平关，经故道、散关，进入陇东；一是出阳平关，经武都、建成 
到陇右的祁山出天水。这二条通道道路较远，但略为平坦。&lt;/p&gt;
&lt;p&gt;诸葛亮在北伐前同将领们商议进军方略时，丞相司马魏延建议出子午道袭取长安。诸葛亮认为魏延的进军方案有危险，便采取稳扎稳打，先夺取陇右，再相机进图关中的战略方针。&lt;/p&gt;
&lt;p&gt;当时曹魏对付蜀汉的方针是分兵守险，坚壁不出，以待国力强大，寻衅灭蜀，防御部署是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命安西将军夏侯楙都督关中，镇守长安；&lt;/li&gt;
&lt;li&gt;命大将军曹真督关右诸军，驻扎在斜谷北面的郿县，以防御赵云；&lt;/li&gt;
&lt;li&gt;派名将张郃率五万驻防陇右一线，以西拒诸葛亮；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;建兴六年（228年），诸葛亮第一次北伐，采用声东击西之计，派赵云、邓芝率偏师作为疑兵，前据汉中的箕谷，扬言由斜谷进攻郿，以吸引和钳制关中魏军，自己率主力出汉中西北，进攻祁山、西县，以夺取陇右。曹魏派大将军曹真督关右诸军迎战。蜀军前锋进至街亭与魏军张郃遭遇。前军指挥马谡部署错误，魏军进攻，蜀军大败，街亭失守。诸葛亮因出师不利，退回汉中。三郡陆续被魏军平定。蜀军佯攻部队赵云，邓芝疏于戒备，在箕谷与曹真对垒时以优势兵力失利，退却时，赵云亲自断后，烧毁褒斜道赤崖以北的阁道，迫使魏军停止追击，诸葛亮以街亭、箕谷失利的结束了第一次北伐。&lt;/p&gt;
&lt;p&gt;同年十二月，诸葛亮获悉魏军曹休攻吴兵败，张郃东下，关中虚弱，急率军数万进行第二次北伐，走故道，出散关，围攻陈仓。魏将郝昭筑城固守，双方相持二十多天，蜀军粮尽，诸葛亮只好退兵。&lt;/p&gt;
&lt;p&gt;第二年春，诸葛亮第三次北伐，派陈式攻取武都、阴平二郡，魏军郭淮反击陈式，诸葛亮率军迎战，郭淮退军，蜀军攻占二郡。&lt;/p&gt;
&lt;h3 id="10.4"&gt;10.4 第四、五次北伐&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/24诸葛亮第四、五次北伐示意图.jpg"    alt="24诸葛亮第四、五次北伐示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;建兴九年（231年）二月，诸葛亮第四次北伐，再出祁山，企图以祁山为据点，夺取陇右。曹魏令费曜等守上邽 ，其余救祁山。诸葛亮企图尽快寻歼司马懿，再夺取陇右，便部署留一部分兵力围攻祁山，自率主力到上邽迎战。司马懿据险不战，诸葛亮求战不得，引军退回祁山，魏军尾随。五月，双方交战，诸葛亮大破魏军，司马懿回军保营。六月，诸葛亮粮尽退军。&lt;/p&gt;
&lt;p&gt;建兴十二年（234年）二月，诸葛亮集中最大的兵力十万人，进行第五次北伐，并派遣使者去东吴，约吴同时出兵攻魏。四月，蜀军沿褒斜道出斜谷进入陇东，在郿县渭水南原筑垒，司马懿(onewayout注: 此处原文有曹然，查三国志诸葛亮传中北伐记载，无此人)率军拒诸葛亮。诸葛亮驻军五丈原，企图占据渭水两岸，切断关、陇要道，创造有利态势，尔后寻歼司马懿。魏、蜀双方进入相持阶段，诸葛亮鉴于前几次北伐，都因运粮不继，使作战意图不能实现，便分兵屯田，作长期驻屯打算。五月，东吴也应约，分三路出兵，进攻曹魏，以配合蜀军在西线的攻势。曹魏对蜀吴的联合进攻，采取“西守东攻”的战略，东吴初先判断蜀军在西线进攻，魏军不会大举东调。及后探知魏军东下，遂不战而退走。&lt;/p&gt;
&lt;p&gt;诸葛亮与司马懿对峙百余天，积劳成疾，病死军中，时年五十四岁，蜀军按照遗令秘不发丧，整军而出，退兵回国。司马懿闻讯追击，蜀军反旗击鼓，佯装反击，司马懿收军，不敢进逼，蜀军结阵回到汉中，结束了长达五次的北伐。&lt;/p&gt;
&lt;h2 id="11"&gt;11 三国统一&lt;/h2&gt;

&lt;h3 id="11.1"&gt;11.1 蜀军边防部署及魏军进攻布势&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/25蜀军边防部署及魏军进攻布势示意图.jpg"    alt="25蜀军边防部署及魏军进攻布势示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;蜀汉在诸葛亮死后，由蒋琬、费祎相继执政，他们采取“保国治民，谨守社稷”的稳重的治国方针。费祎死后，姜维任大将军，掌握了军队。在十年中曾多次出兵伐魏，使国力削弱。面对曹魏的进攻，又制订了错误的诱敌深入方针，他令都督胡济从汉中退驻汉寿，监军王含防守乐城，护军蒋斌防守汉城。另在甘肃武都、成县、陕西凤县、勉县带处建立围守，阻击魏军由武都、阴平进入，而诱其进入汉中。他本人在侯和之战失败后，畏惧黄皓，率主力去沓中避祸，东距汉中千里之遥，汉中难以迅速得到姜维主力支援，而更加空虚。&lt;/p&gt;
&lt;p&gt;曹魏司马昭发现了姜维收缩汉中外围各要点的兵力退保汉、乐二城使汉中防务空虚的弱点，便制定了以一部分兵力牵制姜维于沓中，主力出其空虚，直捣汉中的战略方针，对各路大军作了战略部署：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;西路军：征西将军邓艾统率三万士卒从狄道向甘松、沓中进攻，以牵制姜维；&lt;/li&gt;
&lt;li&gt;中路军：雍州刺吏诸葛绪统率三万士卒自祁山向武街、阴平桥头进军，以截断姜维归路并阻止蜀军进援沓中；&lt;/li&gt;
&lt;li&gt;东路军：镇西将军钟会统率十二万士卒，分由斜谷、骆谷、子午三道并进，分头乘虚直取汉中 然后南下取蜀。&lt;/li&gt;
&lt;li&gt;监军：侍中卫瓘率军千人持节监三路军。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当钟会在关中治兵时，姜维察觉其有进犯的企图，上表后主，建议增派左车骑将军张翼加强阳安关(onewayout注: 即阳平关)口，右车骑将军廖化加强阴平桥头，以确保对汉中的封闭及姜维回援汉中退路之安全。专权的黄皓相信鬼巫的话，以为敌人终归不会来攻，启禀后主扣住此事，因此群臣无人获知这一危急情况。&lt;/p&gt;
&lt;h3 id="11.2"&gt;11.2 魏灭蜀之战&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/26魏灭蜀之战示意图.jpg"    alt="26魏灭蜀之战示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;公元263年，司马昭派邓艾，诸葛绪，钟会率十八万大军分三路攻蜀。当时蜀将姜维驻军陇上沓中，闻钟会军已至汉中，诸葛绪至武街桥头切断了他的后路，便率军退回剑阁，抵抗钟会军。西路邓艾军从陇上轻装出阴平道，行无人之地七百多里，接连攻下江油，涪城，绵竹，进逼成都，后主刘禅出降，蜀亡。&lt;/p&gt;
&lt;h3 id="11.3"&gt;11.3 魏灭蜀之战两军作战经过&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/27魏灭蜀之战两军作战经过示意图.jpg"    alt="27魏灭蜀之战两军作战经过示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;景元四年（263年）春，司马昭下令各路大军攻蜀。姜维在沓中探知钟会的主力已入汉中，恐怕阳安关有失，危及剑阁，成都兵少力弱难以抗击，就决心摆脱邓艾部，立即向东进行战略机动，退回剑阁，凭借天险，设防固守，钟会所部，屡攻不克，十多万魏军陷入进退维谷的境地，加之粮已不继，钟会准备退军。此时，邓艾急向钟会提出出奇制胜，偷渡阴平的袭击方案，并挑选精锐一万人轻装从阴平出发，沿山谷小路行无人之地七百里，凿山通道，越过马阁山山险，直奔江油。蜀军守将马邈不战而降。刘禅急派诸葛瞻率军迎击。诸葛瞻到涪城后，不听部将黄崇的劝谏，迟疑不决，致使邓艾乘机长驱直入，击杀诸葛瞻，占领了绵竹，并向成都推进。魏军的突然逼近，使蜀朝野上下一片慌乱，后主刘禅自知成都难守，逃走无路，便自缚请降，并敕令姜维投降。至此建国四十三年的蜀汉政权被魏灭亡。&lt;/p&gt;
&lt;h3 id="11.4"&gt;11.4 晋平吴之战晋军战略部署及作战经过&lt;/h3&gt;

&lt;p&gt;&lt;center&gt;&lt;img src="/images/threeKindoms/28晋平吴之战晋军战略部署及作战经过示意图.jpg"    alt="28晋平吴之战晋军战略部署及作战经过示意图" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;晋武帝司马炎代魏建晋后，积极备战，作好灭吴的准备。司马炎采用羊祜生前所建议的战略计划，策定了“多路并进、水陆齐发、突然袭击、一举灭吴”的战略方针，并作了如下的战略部署：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;镇东将军司马伷(onewayout注:原文误为司马佃)自下邳向涂中方向进军；&lt;/li&gt;
&lt;li&gt;安东将军王浑自扬州向江西方向进军；&lt;/li&gt;
&lt;li&gt;建威将军王戎自豫州向武昌方向进军；&lt;/li&gt;
&lt;li&gt;平安将军胡奋自荆州向夏口方向进军；&lt;/li&gt;
&lt;li&gt;镇南大将军杜预自襄阳向江陵方向进军；&lt;/li&gt;
&lt;li&gt;龙骧将军王濬和巴东监军唐彬自巴蜀顺江而下，直趋建业。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以上六路军共约二十万人，以贾充为大都督，冠军将军杨济为副都督，统率中军，南屯襄阳，统一指挥诸军。&lt;/p&gt;
&lt;p&gt;太康元年（280年）一月，杜预从襄阳向江陵推进，王浑军向横江方向进军，揭开了晋灭吴战争序幕。二月，王濬、唐彬的水师击破丹阳的吴军盛纪部，顺流而下，相继攻下西陵、夷道等地，杀吴国夷道监陆安，继续前进，杀吴国水师都督陆景。与此同时，杜预派周旨率奇兵八百人乘夜渡江，袭取乐乡，俘获吴国长江上游的军事统帅孙歆，乘胜攻占江陵。胡备军也攻克江安。至此，晋军以荆州已定，调整部署。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;命王濬、唐郴与胡备、王戎共同平定夏口，并顺流东下，直取建业。&lt;/li&gt;
&lt;li&gt;令太尉贾充移驻项城。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;王戎派遣参军罗尚、刘乔率兵配合王濬围攻武昌。吴国江夏太守刘朗和武昌守将虞昺相继投降。&lt;/p&gt;
&lt;p&gt;吴主孙皓探知王浑率军南下之时，便命丞相张悌指挥丹阳太守沈莹等率军三万渡江作战，军至牛渚时，沈莹提出与晋军水师决战，张悌不同意。三月，张悌等渡江与晋军王浑部战于版桥，遭到夹击，吴军大败。张悌、沈莹均战死。&lt;/p&gt;
&lt;p&gt;王濬攻克武昌后，率水师顺江而下，直迫建业。孙皓派游击将军张象率舟万人抵抗，但军心涣散，未战而降。孙皓又凑集二万人命陶濬率领抵抗，但出发前，官兵全部逃散。这时，王浑、王濬、司马伷各部都到达建业附近，王濬的水师越过三山，率领士兵八万，冲入建业，吴主孙皓只好亲到王濬军门请降。九十年的分裂局面至此宣告结束，三国归于统一。&lt;/p&gt;
&lt;p&gt;本页地图及文字说明转引自：&lt;br&gt;
  1. 《中国军事史》王蜀生等编&lt;br&gt;
  2. 《三国军事史》余大吉著&lt;/p&gt;</content><category term="三国"></category><category term="历史"></category></entry><entry><title>Linux/Unix思想</title><link href="https://oneWayOut.github.io/articles/du-shu-bi-ji/Linux_Unix_Thinking/" rel="alternate"></link><published>2016-06-19T00:00:00+08:00</published><updated>2016-06-19T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2016-06-19:/articles/du-shu-bi-ji/Linux_Unix_Thinking/</id><summary type="html">&lt;p&gt;去年年底请同学Leo帮忙装上Ubuntu系统，最近几个月几乎就没用过Windows系统。越来越喜欢Linux简洁的界面，飞快的速度了，唯一的缺陷是Office功能不是很强大，当然也可能是我没找到合适的软件。偶尔打开Windows，越来越难以忍受迅雷，360等软件了，都恨不得给你来半屏广告。这也是我在Github上建博客的原因，保持简洁的界面，只显示有用的信息。&lt;/p&gt;
&lt;p&gt;因为对Linux系统的兴趣，最近看了三本经典好书：《黑客与画家》，《Linux/Unix设计思想》，《UNIX编程艺术》。这几本书都很有趣，有些章节读起来令人击节赞赏，带来恍然大悟的狂喜。&lt;/p&gt;
&lt;p&gt;计算机、互联网的产生变革了我们这个时代，深刻的改变了人们的思维。正如蒸汽机、电气化曾带来的工业革命一样，这是一个巨大的&lt;a href="https://zh.wikipedia.org/zh-cn/典范转移"&gt;范式转移（Paradigm shift）&lt;/a&gt;。《黑客与画家》的作者是美国互联网界举足轻重、有"创业教父"之称的哈佛大学计算机博士Paul Graham。正如译者序中所说：“这本书的内容并不深奥，不仅仅是写给程序员和创业者的，更是写给普通读者的。Paul Graham最大的目的，就是通过这本书，让普通读者理解我们所处的这个计算机时代。”　这本书最浓缩的介绍就在&lt;a href="http://www.ruanyifeng.com/blog/2011/04/on_hacker.html"&gt;译者序&lt;/a&gt;了，我在此不可能介绍得更好。&lt;/p&gt;
&lt;p&gt;后两本书主要是写给软件 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;去年年底请同学Leo帮忙装上Ubuntu系统，最近几个月几乎就没用过Windows系统。越来越喜欢Linux简洁的界面，飞快的速度了，唯一的缺陷是Office功能不是很强大，当然也可能是我没找到合适的软件。偶尔打开Windows，越来越难以忍受迅雷，360等软件了，都恨不得给你来半屏广告。这也是我在Github上建博客的原因，保持简洁的界面，只显示有用的信息。&lt;/p&gt;
&lt;p&gt;因为对Linux系统的兴趣，最近看了三本经典好书：《黑客与画家》，《Linux/Unix设计思想》，《UNIX编程艺术》。这几本书都很有趣，有些章节读起来令人击节赞赏，带来恍然大悟的狂喜。&lt;/p&gt;
&lt;p&gt;计算机、互联网的产生变革了我们这个时代，深刻的改变了人们的思维。正如蒸汽机、电气化曾带来的工业革命一样，这是一个巨大的&lt;a href="https://zh.wikipedia.org/zh-cn/典范转移"&gt;范式转移（Paradigm shift）&lt;/a&gt;。《黑客与画家》的作者是美国互联网界举足轻重、有"创业教父"之称的哈佛大学计算机博士Paul Graham。正如译者序中所说：“这本书的内容并不深奥，不仅仅是写给程序员和创业者的，更是写给普通读者的。Paul Graham最大的目的，就是通过这本书，让普通读者理解我们所处的这个计算机时代。”　这本书最浓缩的介绍就在&lt;a href="http://www.ruanyifeng.com/blog/2011/04/on_hacker.html"&gt;译者序&lt;/a&gt;了，我在此不可能介绍得更好。&lt;/p&gt;
&lt;p&gt;后两本书主要是写给软件、系统人员看的，Linux/Unix系统是当今计算机世界操作系统的中流砥柱，其思想影响了计算机相关的每一个行业，这两本书可以称得上是Linux/Unix界的思想总结。&lt;a href="http://book.51cto.com/art/201204/327131.htm"&gt;《Linux/Unix设计思想》(在线试读)&lt;/a&gt;将Linux/Unix中的设计哲学提炼出来, 较为通俗一些，适合在很短时间内泛读。&lt;a href="http://book.51cto.com/art/201012/239361.htm"&gt;《UNIX编程艺术》(在线试读)&lt;/a&gt;则更像一本Unix宗教的《坛经》，对于Unix的前世今生娓娓道来，关于其历史版权纠纷，各种设计决策间的争论比较，背后蕴含的设计思想的由来都阐述得非常清楚。对于各种设计原则的案例分析很有实践指导意义。这两本书有些重叠的地方，都提出了一些原则，将Linux/Unix的思想提升为一种哲学，或曰主义、宗教。《UNIX编程艺术》这本书干脆将老和尚教诲小和尚作为封面，书中还多次引用禅宗教义。&lt;/p&gt;
&lt;div style="text-align:center"&gt;
&lt;img src="/images/Linux/TAOUP.png" width="400"  alt="TAOUP cover" /&gt;
&lt;/div&gt;

&lt;p&gt;以下引自《Linux/Unix设计思想》：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unix哲学的几条准则看似简单。事实上，它们简单到会容易使人们忽略其重要性。这就是它们颇具欺骗性的地方。其实，简单的外表下掩盖着一个事实：如果人们能够始终如一地贯彻它们，这些准则可是非常行之有效的。    &lt;/p&gt;
&lt;p&gt;(1) 小即是美。相对于同类庞然大物，小巧的事物有着无可比拟的巨大优势。其中一点就是它们能够以独特有效的方式结合其他小事物，而且这种方式往往是最初的设计者没能预见到的。&lt;/p&gt;
&lt;p&gt;(2) 让每一个程序只做好一件事情。通过集中精力应对单一任务，程序可以减少很多冗余代码，从而避免过高的资源开销、不必要的复杂性和缺乏灵活性。&lt;/p&gt;
&lt;p&gt;(3) 尽快建立原型。大多数人都认同"建立原型"（prototyping）是任何项目的一个重要组成部分。在其他方法论中，建立原型只是设计阶段中一个不太重要的组成部分，然而，在Unix环境下它却是达成完美设计的主要工具。&lt;/p&gt;
&lt;p&gt;(4) 舍高效率而取可移植性。当Unix作为第一个可移植系统而开创先河时，它曾经掀起过轩然大波。今天，可移植性早被视作现代软&amp;gt;件设计中一个理所当然的特性，这更加充分说明这条Unix准则早就在Unix之外的系统中获得了广泛认可。&lt;/p&gt;
&lt;p&gt;(5) 使用纯文本文件来存储数据。舍高效率而取可移植性强调了可移植代码的重要性。其实可移植性数据的重要性绝不亚于可移植代码。在关于可移植性的准则中，人们往往容易忽视可移植性数据。&lt;/p&gt;
&lt;p&gt;(6) 充分利用软件的杠杆效应。很多程序员对可重用代码模块的重要性只有一些肤浅的认识。代码重用能帮助人们充分利用软件的杠杆效应。一些Unix的开发人员正是遵循这个强大的理念，在相对较短的时间内编写出了大量应用程序。&lt;/p&gt;
&lt;p&gt;(7) 使用shell脚本来提高杠杆效应和可移植性。shell脚本在软件设计中可谓是一把双刃剑，它可以加强软件的可重用性和可移植性。无论什么时候，只要有可能，编写shell脚本来替代C语言程序都不失为一个良好的选择。&lt;/p&gt;
&lt;p&gt;(8) 避免强制性的用户界面。Unix开发人员非常了解，有一些命令用户界面为什么会被称为是"强制性的"（captive）用户界面。这些命令在运行的时候会阻止用户去运行其他命令，这样用户就会成为这些系统的囚徒。在图形用户界面中，这样的界面被称为"模态"（modal）。&lt;/p&gt;
&lt;p&gt;(9) 让每一个程序都成为过滤器。所有软件程序共有的最基本特性就是，它们只修改而从不创造数据。因此，基于软件的过滤器本质，人们就应该把它们编写成执行过滤器任务的程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;
一句话总结Linux/Unix哲学： &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KISS: Keep It Simiple, Stupid&lt;/strong&gt;&lt;/p&gt;</content><category term="Linux"></category><category term="Unix"></category></entry><entry><title>这个世界还在更糟</title><link href="https://oneWayOut.github.io/articles/guan-dian-gan-xiang/This_world/" rel="alternate"></link><published>2016-05-29T00:00:00+08:00</published><updated>2016-05-29T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2016-05-29:/articles/guan-dian-gan-xiang/This_world/</id><summary type="html">&lt;p&gt;看到一个关于设计大师&lt;code&gt;山本耀司&lt;/code&gt;的视频，感觉一下击中了内心。&lt;/p&gt;
&lt;iframe class="video_iframe" width="570" height="323" src="http://player.youku.com/embed/XOTI1NzI3MDY0" data-link="http://v.youku.com/v_show/id_XOTI1NzI3MDY0.html?from=s1.8-1-1.2" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt; 
这个世界本该更美好，然而事实并非如此。专制，暴行，不公的悲剧每天仍在上演；谎言，扒粪，颂圣的新闻如同一个个荒诞的笑话, 早已比广告更令我厌倦，他们的本质并无分别。强权与流行文化只想将我们变成愚昧、服从的消费者与娱乐者。他们总在耳旁聒噪：来吧，为选秀节目投票鼓掌，来场说走就走的旅行……　我们在消费他们生产的各种垃圾资讯，同时也在制造这些垃圾，每天津津乐道于街头巷尾的狗血八卦，复制粘贴转发鸡汤成功学……　逐渐丧失思考创造能力。&lt;/p&gt;
&lt;p&gt;我想要这个世界更加美好，可个人力量渺小如蝼蚁，无暇他顾，到头来只想着如何改变自己来适应他。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;I feel a little bit pity for young people
because…Life today for young people…
Worse
It&amp;#39;s changing so quickly …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;看到一个关于设计大师&lt;code&gt;山本耀司&lt;/code&gt;的视频，感觉一下击中了内心。&lt;/p&gt;
&lt;iframe class="video_iframe" width="570" height="323" src="http://player.youku.com/embed/XOTI1NzI3MDY0" data-link="http://v.youku.com/v_show/id_XOTI1NzI3MDY0.html?from=s1.8-1-1.2" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt; 
这个世界本该更美好，然而事实并非如此。专制，暴行，不公的悲剧每天仍在上演；谎言，扒粪，颂圣的新闻如同一个个荒诞的笑话, 早已比广告更令我厌倦，他们的本质并无分别。强权与流行文化只想将我们变成愚昧、服从的消费者与娱乐者。他们总在耳旁聒噪：来吧，为选秀节目投票鼓掌，来场说走就走的旅行……　我们在消费他们生产的各种垃圾资讯，同时也在制造这些垃圾，每天津津乐道于街头巷尾的狗血八卦，复制粘贴转发鸡汤成功学……　逐渐丧失思考创造能力。&lt;/p&gt;
&lt;p&gt;我想要这个世界更加美好，可个人力量渺小如蝼蚁，无暇他顾，到头来只想着如何改变自己来适应他。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;I feel a little bit pity for young people
because…Life today for young people…
Worse
It&amp;#39;s changing so quickly
They are losing their identity
They are losing their dream
and they are losing their propose
passion… 
They look like
giving up
giving up to stay pop
……

I&amp;#39;m walking on the wild side of the street
It&amp;#39;s very boring to walk in the center of the big road
mainstream…so boring
Edgy is…
very exciting

……
It&amp;#39;s all right
I have nothing
Humen being is born naked
You will lose your freedom by the property
Life is kind of…
passing，just passing

我为青年们感到一丝悲伤
因为…这个世界还在更糟
变化得这样快
他们失去了个性
忘记了梦想
丢掉了目标
还有激情…
他们好像
在放弃
放弃自己 和大多数保持一致
……
我行于荆棘小径
在平坦大路行走 很无聊
主流…很无聊
边缘化实在…
太兴奋了
……
有什么关系
我本一无所有
人本来赤条条 无牵挂
财富在剥夺你的自由
生命本来…
就是路过而已
           ——山本耀司
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>How to customize Pixhawk in your own project</title><link href="https://oneWayOut.github.io/articles/xue-xi-zong-jie/customize_Pixhawk/" rel="alternate"></link><published>2016-05-24T00:00:00+08:00</published><updated>2016-05-24T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2016-05-24:/articles/xue-xi-zong-jie/customize_Pixhawk/</id><summary type="html">&lt;p&gt;本文是在ISAE Supaero实习时，应老师要求所写。本来老师要求我对Pixhawk的理解写成文档或PPT,　因刚好在折腾博客，就放在这里了。&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pixhawk is an open-source autopilot platform. In this article, I explained the basic architecture of Pixhawk source code. And how to customize it in your own project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#0"&gt;0. Prerequisite&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1"&gt;1. Understand Pixhawk source code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.1"&gt;1.1 Install the toolchain and build the code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.2"&gt;1.2 How are the source code directories organized&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.3"&gt;1.3 The boot process&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.4"&gt;1.4 The startup scripts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#1.5"&gt;1.5 The architecture&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2"&gt;2. How to costumize&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.1"&gt;2.1 A small tutorial&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.2"&gt;2.2 Add you own controller&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.3"&gt;2.3 Change the mixer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#2.4"&gt;2.4 Change the makefile and the startup script&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3"&gt;3. Try this example&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.1"&gt;3.1 How to Try it&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#3.2"&gt;3.2 What I have changed&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="0"&gt;0. Prerequisite&lt;/h2&gt;

&lt;p&gt;It's recommended to use &lt;strong&gt;Ubuntu 14.04 LTS&lt;/strong&gt;, otherwise you may have strange issues.&lt;/p&gt;
&lt;p&gt;Please get familiar with GIT, it's a very powerfull software version control tool.　You can install the GUI tool &lt;code&gt;git cola&lt;/code&gt; (In terminal: apt-get install git-cola) if you are not comfortable with the git commands in terminal.&lt;/p&gt;
&lt;p&gt;SublimeText 3 is a convenient editor to navigate the numerous source files. There is already &lt;a href="https://github.com/PX4/Firmware/blob/master/Firmware.sublime-project"&gt;a project file&lt;/a&gt; in the source folder that you can import to SublimeText. One feature that I used every day is that: Press "Ctrl + p" and type in the filename, and you can find the file you want instantly. &lt;/p&gt;
&lt;h2 id="1"&gt;1. Understand Pixhawk source code&lt;/h2&gt;

&lt;h3 id="1.1"&gt;1.1 Install the toolchain and build the code &lt;/h3&gt;

&lt;p&gt;First you have to install the toolchain by following the steps in &lt;a href="http://dev.px4.io/starting-installing-linux.html"&gt;this webpage&lt;/a&gt;. And then you can build the code and flash it to your PX4 board as &lt;a href="http://dev.px4.io/starting-building.html"&gt;this page&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id="1.2"&gt;1.2 How are the source code directories organised &lt;/h3&gt;

&lt;p&gt;After you have cloned the source code repository, you might be scared by so many directories and files. Actually you don't need to know all of them. I list the directory tree below(only the very import directories),　and explain what are in the folders.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Firmware 
├── cmake  
├── msg 
│   └── templates 
│       ├── px4 
│       └── uorb 
├── ROMFS 
│   ├── px4fmu_common 
│   │   ├── init.d 
│   │   ├── logging 
│   │   └── mixers 
│   └── px4fmu_test 
│       ├── init.d 
│       ├── mixers 
│       └── unit_test_data 
└── src 
    ├── drivers 
    ├── examples 
    ├── modules 
    │   ├── attitude_estimator_ekf 
    │   ├── attitude_estimator_q 
    │   ├── bottle_drop 
    │   ├── commander 
    │   ├── controllib_test 
    │   ├── dataman 
    │   ├── ekf2 
    │   ├── ekf2_replay 
    │   ├── ekf_att_pos_estimator 
    │   ├── fw_att_control 
    │   ├── fw_pos_control_l1 
    │   ├── gpio_led 
    │   ├── land_detector 
    │   ├── local_position_estimator 
    │   ├── mavlink 
    │   ├── mc_att_control 
    │   ├── mc_att_control_multiplatform 
    │   ├── mc_pos_control 
    │   ├── mc_pos_control_multiplatform 
    │   ├── muorb 
    │   ├── navigator 
    │   ├── param 
    │   ├── position_estimator_inav 
    │   ├── px4iofirmware 
    │   ├── sdlog2 
    │   ├── segway 
    │   ├── sensors 
    │   ├── simulator 
    │   ├── systemlib 
    │   ├── uavcan 
    │   ├── unit_test 
    │   ├── uORB 
    │   └── vtol_att_control 
    └── systemcmds 
        ├── bl_update 
        ├── config 
        ├── dumpfile 
        ├── esc_calib 
        ├── i2c 
        ├── mixer 
        ├── motor_test 
        ├── mtd 
        ├── nshterm 
        ├── param 
        ├── perf 
        ├── pwm 
        ├── reboot 
        ├── reflect 
        ├── tests 
        ├── top 
        ├── topic_listener 
        ├── usb_connected 
        └── ver 
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Folder&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cmake&lt;/td&gt;
&lt;td&gt;make files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;msg&lt;/td&gt;
&lt;td&gt;uORB msg template, the uORB msg headers are generated from this folder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROMFS&lt;/td&gt;
&lt;td&gt;startup scripts and mixer files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src&lt;/td&gt;
&lt;td&gt;drivers, examples, flight control tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/drivers&lt;/td&gt;
&lt;td&gt;all the drivers: gps, gyro, pwm...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/examples&lt;/td&gt;
&lt;td&gt;some simple examples help you understand the code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/modules&lt;/td&gt;
&lt;td&gt;estimators, controllers ....&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;src/systemcmds&lt;/td&gt;
&lt;td&gt;some handy commands can be used in Nuttx shell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As you can see, the source code files are well organised. Though you still need time to get familiar with them.&lt;/p&gt;
&lt;h3 id="1.3"&gt;1.3 The boot process&lt;/h3&gt;

&lt;p&gt;If you power on your Pixhawk board through USB cable or BEC, the LED will flash and the buzzer will play a special tune(you can check the tune meaning &lt;a href="http://ardupilot.org/copter/docs/common-sounds-pixhawkpx4.html"&gt;here&lt;/a&gt;). But you may wander what exactly happen during this process. 
&lt;center&gt;&lt;img src="/images/pixhawk/pixhawk_board.png" alt="pixhawk_board" width="219" height="337" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;When powering on the board, the bootloader will run first. Bootloader is like BIOS in your PC. And it's already in the board when you buy it. So you may never need to bother it. The bootloader will launch the Nuttx Operating System. After some initialization of the hardware, memory... the Nuttx will execute a script file called &lt;strong&gt;"init.d/rcS"&lt;/strong&gt; in function &lt;code&gt;nsh_initscript()&lt;/code&gt; of file &lt;code&gt;nsh_script.c&lt;/code&gt;. You can check the script file folder in &lt;a href="#1.2"&gt;section 1.2&lt;/a&gt;). This is a &lt;strong&gt;very important&lt;/strong&gt; step. By executing this script file, some parameters in the EEPROM will be read, and the corresponding tasks related to these parameters will be launched. I will explain this in the next section.&lt;/p&gt;
&lt;h3 id="1.4"&gt;1.4 The startup scripts&lt;/h3&gt;

&lt;p&gt;Nuttx is like a simplified Linux, moreover it's real time. So the script file is quite the same as Bash script in Linux. You can easily understand it if you know linux well.&lt;/p&gt;
&lt;p&gt;Let's read some lines in &lt;code&gt;ROMFS/px4fmu_common/init.d/rcS&lt;/code&gt; first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;......
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Try to mount the microSD card.&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# REBOOTWORK this needs to start after the flight control loop&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; mount -t vfat /dev/mmcsd0 /fs/microsd
&lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] microSD mounted: /fs/microsd&amp;quot;&lt;/span&gt;
    &lt;span class="c1"&gt;# Start playing the startup tune&lt;/span&gt;
    tone_alarm start
&lt;span class="k"&gt;else&lt;/span&gt;
    tone_alarm MBAGP
    &lt;span class="k"&gt;if&lt;/span&gt; mkfatfs /dev/mmcsd0
    &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; mount -t vfat /dev/mmcsd0 /fs/microsd
        &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] microSD card formatted&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[i] format failed&amp;quot;&lt;/span&gt;
            tone_alarm MNBG
            &lt;span class="nb"&gt;set&lt;/span&gt; LOG_FILE /dev/null
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;set&lt;/span&gt; LOG_FILE /dev/null
    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
......
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At first it will start serial driver and set some parameters, which is not interested by us and not listed here. Then you will see &lt;code&gt;if mount -t vfat /dev/mmcsd0 /fs/microsd&lt;/code&gt;. &lt;code&gt;mount&lt;/code&gt; is a built-in command supported by Nuttx (Linux has the same command). It will try to mount the microSD card. If the return value is true, which means microSD card is mounted successfully,  the &lt;code&gt;echo&lt;/code&gt; will print the result in shell window. And you should hear the buzzer alarm by &lt;code&gt;tone_alarm start&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are many similar statements like &lt;code&gt;tone_alarm start&lt;/code&gt;. If you understand this, you will almost know how the script file works and how to modify it to satisfy your own needs. Well, the grammar is simple: &lt;code&gt;command -arguments&lt;/code&gt;, just like the commands in Linux Terminal. &lt;code&gt;tone_alrm&lt;/code&gt; is a command compiled from file &lt;code&gt;tone_alarm.cpp&lt;/code&gt; by some tricks in makefile. If you scrutinise the function &lt;code&gt;tone_alarm_main()&lt;/code&gt; in this file, you will find this command has arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let's read another piece of code in this file to see if you have any clue.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;......
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$MODE&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; autostart &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
    &lt;span class="c1"&gt;#&lt;/span&gt;
    &lt;span class="c1"&gt;# Start the ORB (first app to start)&lt;/span&gt;
    &lt;span class="c1"&gt;#&lt;/span&gt;
    uorb start

    &lt;span class="c1"&gt;#&lt;/span&gt;
    &lt;span class="c1"&gt;# Load parameters&lt;/span&gt;
    &lt;span class="c1"&gt;#&lt;/span&gt;
    &lt;span class="nb"&gt;set&lt;/span&gt; PARAM_FILE /fs/microsd/params
    &lt;span class="k"&gt;if&lt;/span&gt; mtd start
    &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;set&lt;/span&gt; PARAM_FILE /fs/mtd_params
    &lt;span class="k"&gt;fi&lt;/span&gt;

    param &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="nv"&gt;$PARAM_FILE&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; param load
    &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[param] Loaded: &lt;/span&gt;&lt;span class="nv"&gt;$PARAM_FILE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[param] FAILED loading &lt;/span&gt;&lt;span class="nv"&gt;$PARAM_FILE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; param reset
        &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="k"&gt;fi&lt;/span&gt;
    &lt;span class="k"&gt;fi&lt;/span&gt;
......
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can find the commands &lt;code&gt;uorb, mtd, param&lt;/code&gt; in files: &lt;code&gt;uORBMain.cpp, mtd.c, param.c&lt;/code&gt;. You don't need to go deep inside these files right now, anyway we may use this method to scrutinise other files later (For instance: flight control files). This piece of code will just start uORB to provide communication service, and load parameter file &lt;code&gt;mtd_params&lt;/code&gt; which contains airframe configuration, PID parameters, etc. &lt;/p&gt;
&lt;p&gt;I assume you have read through this file. So to summarize, the startup scripts are very important in the boot process. I list the things happened in this process to our concern:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read the parameter file&lt;/li&gt;
&lt;li&gt;Start the sensor drivers (script &lt;code&gt;rc.sensors&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Set and load the mixer corresponding to the airframe parameter &lt;code&gt;SYS_AUTOSTART&lt;/code&gt;, set the pwm channel (script &lt;code&gt;rc.autostart&lt;/code&gt;, this file is generated after you build the code) &lt;/li&gt;
&lt;li&gt;Start the flight tasks corresponding to the airframe parameter &lt;code&gt;SYS_AUTOSTART&lt;/code&gt; (script &lt;code&gt;rc.fw_apps&lt;/code&gt;, &lt;code&gt;rc.mc_apps&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="1.5"&gt;1.5 The architecture&lt;/h3&gt;

&lt;p&gt;All the flight control tasks run in Nuttx system. They communicate with each other through uORB. uORB is a implementation of publish-subscribe pattern.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="/images/pixhawk/pixhawk_arch.png" alt="pixhawk_arch" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
To control a vehicle, you need to navigate to waypoints, estimate the position and attitude, and control the position and attitude by using feedback control theory. That's the idea in pixhawk flight control architecture. 
&lt;center&gt;&lt;img src="/images/pixhawk/pixhawk_feedbackcontrol.png" alt="pixhawk_arch" /&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;p&gt;These flight control modules are in folder &lt;code&gt;Firmware/src/modules&lt;/code&gt;. I list the  modules used by different airframes below. Actually you can find where they are launched in the startup scripts.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="left"&gt;Fixed Wing&lt;/th&gt;
&lt;th align="left"&gt;Multi Copter&lt;/th&gt;
&lt;th align="left"&gt;VTOL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Navigator&lt;/td&gt;
&lt;td align="left"&gt;navigator&lt;/td&gt;
&lt;td align="left"&gt;navigator&lt;/td&gt;
&lt;td align="left"&gt;navigator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Estimator&lt;/td&gt;
&lt;td align="left"&gt;ekf_att_pos_estimator&lt;/td&gt;
&lt;td align="left"&gt;attitude_estimator_q &lt;br&gt; position_estimator_inav&lt;/td&gt;
&lt;td align="left"&gt;attitude_estimator_q &lt;br&gt; position_estimator_inav&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Controller&lt;/td&gt;
&lt;td align="left"&gt;fw_att_control &lt;br&gt; fw_pow_control_l1&lt;/td&gt;
&lt;td align="left"&gt;mc_att_control &lt;br&gt; mc_pos_control&lt;/td&gt;
&lt;td align="left"&gt;vtol_att_control &lt;br&gt; mc_att_control &lt;br&gt; mc_pos_control &lt;br&gt; fw_att_control &lt;br&gt; fw_pow_control_l1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;br&gt;
The architectural overview could be seen &lt;a href="http://dev.px4.io/concept-architecture.html"&gt;here&lt;/a&gt;. The tasks communicate by publishing and subscribing uORB messages. For instance, the messages related to the module &lt;code&gt;attitude_estimator_q&lt;/code&gt; are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Published messages:&lt;ul&gt;
&lt;li&gt;vehicle_attitude&lt;/li&gt;
&lt;li&gt;control_state&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Subscribed messages:&lt;ul&gt;
&lt;li&gt;sensor_combined &lt;/li&gt;
&lt;li&gt;vision_position_estimate &lt;/li&gt;
&lt;li&gt;att_pos_mocap &lt;/li&gt;
&lt;li&gt;airspeed &lt;/li&gt;
&lt;li&gt;parameter_update &lt;/li&gt;
&lt;li&gt;vehicle_global_position&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check the meaning of these messages in folder &lt;code&gt;Firmware/msg/templates&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="2"&gt;2. How to costumize&lt;/h2&gt;

&lt;h3 id="2.1"&gt; 2.1 A small tutorial &lt;/h3&gt;

&lt;p&gt;We can do a small exercise to understand the code better, and then go even further. Please follow &lt;a href="http://dev.px4.io/tutorial-hello-sky.html#step-2-minimal-application"&gt;this tutorial&lt;/a&gt;. The FTDI 3.3v cable is &lt;strong&gt;a necessary hardware&lt;/strong&gt; for developpers to interact with Nuttx through &lt;strong&gt;Nuttx Shell(NSH)&lt;/strong&gt;. &lt;/p&gt;
&lt;h3 id="2.2"&gt; 2.2 Add you own controller &lt;/h3&gt;

&lt;p&gt;Following the same concept, you can add a simple control law in &lt;a href="https://github.com/PX4/Firmware/tree/master/src/examples/fixedwing_control"&gt;&lt;code&gt;Firmware/src/examples/fixedwing_control/main.c&lt;/code&gt;&lt;/a&gt;. The program subscribes the estimated position and attitude, manual control input. The only thing you need to do is to implement the PID control law, and calculate the &lt;strong&gt;normalized control value&lt;/strong&gt;. Then publish it in the &lt;code&gt;actuator_controls_0&lt;/code&gt; message to mixer to control the servos or motors.&lt;/p&gt;
&lt;h3 id="2.3"&gt; 2.3 Change the mixer &lt;/h3&gt;

&lt;p&gt;The key concept of the mixer is to translate the normalized control output from the controller to pwm to actuators, Which greatly improves reusability of code. If you have a special airframe, you may need to have you own mixer to control the acuators. Please refer to &lt;a href="http://dev.px4.io/concept-mixing.html"&gt;this webpage&lt;/a&gt; and the source file folder &lt;code&gt;Firmware/ROMFS/mixers&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="2.4"&gt; 2.4 Change the makefile and the startup script&lt;/h3&gt;

&lt;p&gt;You can add you own program in &lt;code&gt;Firmware/cmake/configs/nuttx_px4fmu-v2_default.cmake&lt;/code&gt; as you did before in &lt;a href="#2.1"&gt;section 2.1&lt;/a&gt;, so as to compile it. But you still need to launch it in Nuttx shell. An alternative and simple way is to start it in startup script like below (Take fixed wing airframe for instance):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;......
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Start attitude controller&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# fw_att_control start&lt;/span&gt;
&lt;span class="c1"&gt;# fw_pos_control_l1 start&lt;/span&gt;

ex_fixedwing_control start
......
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This piece of code is from &lt;code&gt;rc.fw_apps&lt;/code&gt;. As you can see, two lines are commented, one line is inserted. So your own controller &lt;code&gt;ex_fixedwing_control&lt;/code&gt; from &lt;a href="#2.2"&gt;section 2.2&lt;/a&gt; is started instead of the original one: &lt;code&gt;fw_att_control&lt;/code&gt; and &lt;code&gt;fw_pos_control_l1&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="3"&gt;3. Try this example &lt;/h2&gt;

&lt;p&gt;I have modified some Pixhawk code for my internship project. So you can try my code and use the same method to customize pixhawk in your own project too.&lt;/p&gt;
&lt;p&gt;In my example, the &lt;code&gt;MAIN OUT&lt;/code&gt; channel 1 and 2 can be controlled by the roll angle. And the &lt;code&gt;MAIN OUT&lt;/code&gt; channel 3, 4, 5 and 6 are controlled by vertical speed.&lt;/p&gt;
&lt;h3 id="3.1"&gt;3.1 How to Try it&lt;/h3&gt;

&lt;p&gt;In terminal, go to the folder where you want to store the source code, type in the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# clone the repository&lt;/span&gt;
git clone https://github.com/oneWayOut/Firmware.git
&lt;span class="nb"&gt;cd&lt;/span&gt; Firmware
git checkout caidev
git submodule update --init --recursive

&lt;span class="c1"&gt;# please connect pixhawk to your computer through USB cable&lt;/span&gt;
make px4fmu-v2_default upload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After you have execute the commands above, connect the servo and motor to the &lt;code&gt;MAIN OUT&lt;/code&gt; channels. Connect a FTDI 3.3v cable to pixhawk as explained &lt;a href="http://dev.px4.io/advanced-system-console.html#connecting-via-ftdi-33v-cable"&gt;here&lt;/a&gt;. I assume you have installed &lt;code&gt;screen&lt;/code&gt;. So you can connect to Nuttx shell by the command below(change &lt;code&gt;/dev/ttyXXX&lt;/code&gt; to your own device name, something like &lt;code&gt;/dev/ttyUSB0&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;screen /dev/ttyXXX &lt;span class="m"&gt;57600&lt;/span&gt; 8N1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And start my customized task in Nuttx shell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nsh&amp;gt; ex_visionair_control start
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Press the safety button to arm the board, now you can observe how the servo and motor react when you change the roll angle and the vertical speed of Pixhawk board. &lt;/p&gt;
&lt;h3 id="3.2"&gt;3.2 What I have changed &lt;/h3&gt;

&lt;p&gt;As I said before, I changed the startup scripts, makefile. And I renamed the folder &lt;code&gt;fixedwing_control&lt;/code&gt; to &lt;code&gt;visionair_control&lt;/code&gt;. In the file &lt;code&gt;main.c&lt;/code&gt; from this folder, I connect the sensor value  directly to pwm channel, but not using mixer.  You can see what I have changed &lt;a href="https://github.com/PX4/Firmware/compare/master...oneWayOut:caidev"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="Pixhawk"></category><category term="UAV"></category></entry><entry><title>图示卡尔曼滤波器原理(译文)</title><link href="https://oneWayOut.github.io/articles/xue-xi-zong-jie/Kalman_Filter/" rel="alternate"></link><published>2016-05-18T00:00:00+08:00</published><updated>2016-05-18T00:00:00+08:00</updated><author><name>oneWayOut</name></author><id>tag:onewayout.github.io,2016-05-18:/articles/xue-xi-zong-jie/Kalman_Filter/</id><summary type="html">&lt;p&gt;本译文结合大量直指核心概念的图片，深入浅出的解释了卡尔曼滤波器的基本原理。&lt;/p&gt;</summary><content type="html">&lt;script type="text/x-mathjax-config"&gt;
MathJax.Hub.Config({
jax: ["input/TeX", "output/HTML-CSS"],
tex2jax: {
    inlineMath: [ ['$', '$'] ],
    displayMath: [ ['$$', '$$']],
    processEscapes: true,
    skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
},
messageStyle: "none",
"HTML-CSS": { preferredFont: "TeX", availableFonts: ["STIX","TeX"] }
});
&lt;/script&gt;

&lt;script type="text/x-mathjax-config"&gt;
MathJax.Hub.Config({
TeX: { equationNumbers: { autoNumber: "AMS" } }
});
&lt;/script&gt;

&lt;script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;最近需要用到卡尔曼滤波器，看了一些文章，发现这篇&lt;a href="http://www.bzarg.com/p/how-a-kalman-filter-works-in-pictures"&gt; How a Kalman filter works, in pictures&lt;/a&gt;最为深入浅出，通俗易懂，翻译出来供朋友们参考。
若你发现有任何不当之处请Email至：&lt;a href="mailto:cia120@163.com"&gt;cia120@163.com&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文将介绍&lt;a href="https://zh.wikipedia.org/wiki/卡尔曼滤波"&gt;卡尔曼滤波器&lt;/a&gt;，因其在工程中有着广泛应用. &lt;/p&gt;
&lt;p&gt;遗憾的是貌似很少有软件工程师和科学家对其了解。卡尔曼滤波器是一个特别通用和强大的&lt;strong&gt;信息融合&lt;/strong&gt;工具，特别是出现不确定因素时. 其提取精确信息的能力曾一度看起来有些不可思议. 如果说我有些夸大其词，请看&lt;a href="http://www.bzarg.com/p/improving-imu-attitude-estimates-with-velocity-data"&gt;我之前发的一个视频&lt;/a&gt;，这个视频中我演示了卡尔曼滤波器根据一个自由浮动的物体的&lt;em&gt;速度&lt;/em&gt;得出其&lt;em&gt;方位&lt;/em&gt;. 非常巧妙. &lt;/p&gt;
&lt;h1&gt;什么是卡尔曼滤波器?&lt;/h1&gt;
&lt;p&gt;卡尔曼滤波器对于含&lt;strong&gt;不确定信息&lt;/strong&gt;的动态系统均可适用，你可以对系统下一步的行为做一个&lt;strong&gt;有根据的猜测&lt;/strong&gt;. 哪怕实际情况与你的猜测相去甚远，卡尔曼滤波器通常也能计算出实际发生了什么. 并且它能有效利用你可能不会想到的各种极端现象之间的联系. &lt;/p&gt;
&lt;p&gt;对于连续变化的系统，卡尔曼滤波器是十分理想的. 其优势是占用内存少（除了上一个状态，不需要存储其他历史数据），而且速度快，这些优势使其非常适用于实时问题和嵌入式系统. &lt;/p&gt;
&lt;p&gt;Google一下卡尔曼滤波器，搜索到的大部分文章用到的数学知识都看起来晦涩难懂，让人望而却步. 事实上如果你从正确的角度看待它，就会发现卡尔曼滤波器其实超级简单易懂,这使它成为一个很好的文章主题.我将以许多清晰、漂亮的图片以及各色符号来阐述之. 理解本文你仅需的前置知识是懂一些概率论和矩阵. &lt;/p&gt;
&lt;p&gt;我们先从一个不太严谨的例子开始. 如果你想直奔主题到漂亮的图片和数学公式，请&lt;a href="#jump"&gt;跳到这里继续阅读&lt;/a&gt;. &lt;/p&gt;
&lt;h1&gt;卡尔曼滤波器能干什么？&lt;/h1&gt;
&lt;p&gt;我们假定这样一个例子：你组装了一个能在树林中漫步的小机器人，它必须知道自身的确切位置，从而能自主行驶. &lt;/p&gt;
&lt;!--div style="text-align:center"&gt;
&lt;img src="/images/robot_forest-300x160.png" alt="Your little robot" /&gt;
&lt;/div--&gt;

&lt;p&gt;&lt;img alt="Your little robot" class="center" src="/images/robot_forest-300x160.png"&gt;&lt;/p&gt;
&lt;p&gt;我们可以说这个机器人有一个状态向量$\vec{x_k}$，包含位置和速度：&lt;/p&gt;
&lt;p&gt;$$\vec{x_k} = (\vec{p}, \vec{v})$$&lt;/p&gt;
&lt;p&gt;注意状态向量其实就是列出了关于系统组态的一些数字. 在我们的例子中就是位置和速度，根据你所研究的问题不同，它也可能是油箱中液体的体积，汽车引擎的温度，手指在触摸板上的位置等你所关注的任何东西. &lt;/p&gt;
&lt;p&gt;我们的机器人有GPS传感器，其精度约10m，还不错. 但它还需更精确地知道自身位置，树林中遍地沟壑，就算有几十厘米的失误，机器人也可能跌入其中，所以仅靠GPS定位还是不够的. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Oh no." class="center" src="/images/robot_ohnoes-300x283.png"&gt;&lt;/p&gt;
&lt;p&gt;我们可能还能知道关于机器人移动的一些其他信息：发送给驱动轮电机的指令，若其行进方向无障碍，其下一个时刻可能就在这个方向稍远的位置. 当然关于其运动也有些未知因素：机器人可能被强风吹歪，其轮子可能打滑，或在崎岖的地形上翻滚. 因此轮子转动的距离不一定就代表了机器人行进的距离，预测也可能不准. &lt;/p&gt;
&lt;p&gt;GPS能得到关于状态一些东西，但并不直接，并带有不确定和不精确性. &lt;strong&gt;预测&lt;/strong&gt;能得到机器人如何将如何移动，但有同样的局限性. &lt;/p&gt;
&lt;p&gt;如果用上所有这些手头上的信息，能比单独仅用GPS或仅凭预测得到更好的结果吗？答案是肯定的，这就是卡尔曼滤波器的用武之处. &lt;/p&gt;
&lt;p&gt;&lt;span id="jump"&gt;  &lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;卡尔曼滤波器如何看你的问题&lt;/h1&gt;
&lt;p&gt;（&lt;code&gt;译注：下文很多地方将出现估计（estimate）和预测(predict)两词，请注意其区别,前者指根据测量值等已知量估计出所关心的状态变量的值，后者指根据当前状态预测下一时刻的状态.&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;看一下我想阐释的问题，我们继续从这个仅有位置和速度的简单状态向量开始：&lt;/p&gt;
&lt;p&gt;$$\vec{x} = \begin{bmatrix}
p\\
v
\end{bmatrix}$$&lt;/p&gt;
&lt;p&gt;我们并不知道确切的位置和速度，只知道一些位置和速度的可能组合，但其中一些组合的可能性比其他的更大:
&lt;center&gt;&lt;img src="/images/gauss_0.png" width="310" height="325"/&gt;&lt;/center&gt; &lt;/p&gt;
&lt;p&gt;卡尔曼滤波器假定这两个变量（在我们的例子中是位置和速度）是随机且&lt;a href="https://zh.wikipedia.org/wiki/正态分布"&gt;高斯分布&lt;/a&gt;（即正态分布）. 每个变量有一个&lt;strong&gt;平均值&lt;/strong&gt;$\mu$（也就是最可能的状态），以及&lt;a href="https://zh.wikipedia.org/wiki/方差"&gt;&lt;strong&gt;方差(Variance)&lt;/strong&gt;&lt;/a&gt;&lt;em&gt;$\sigma^2$&lt;/em&gt;，方差表示不确定性:（&lt;code&gt;译注：下图中有一小错误，颜色标记的应为标准差，而非方差，否则单位不一致&lt;/code&gt;）
&lt;center&gt;&lt;img src="/images/gauss_1.png" width="310" height="276"/&gt;&lt;/center&gt; &lt;/p&gt;
&lt;p&gt;在上图中，位置和速度是&lt;strong&gt;不相关&lt;/strong&gt;的，这意味着你无法从一个变量的状态知道另一个变量的任何信息. &lt;/p&gt;
&lt;p&gt;下图显示了一个稍有趣的例子：位置和速度是&lt;strong&gt;相关&lt;/strong&gt;的，观测到一个特定的位置的可能性取决于此时的速度. 
&lt;center&gt;&lt;img src="/images/gauss_3.png" width="310" height="286"/&gt;&lt;/center&gt; &lt;/p&gt;
&lt;p&gt;当我们以当前位置来预测下一个位置时，这种相关的情况就可能发生. 如果速度较快，下一位置就会更远，反之亦然. &lt;/p&gt;
&lt;p&gt;跟踪这种相关性非常重要，因为这给了我们&lt;strong&gt;更多的信息&lt;/strong&gt;：对一个变量的测量值告诉我们其他变量的可能值. 这就是卡尔曼滤波器的目的，从一些不太确定的测量中尽量挤出更多有用的信息!&lt;/p&gt;
&lt;p&gt;这种相关性可以用&lt;a href="https://zh.wikipedia.org/wiki/协方差矩阵"&gt;协方差矩阵(Covariance matrix)&lt;/a&gt;来量度. 简单来说，该矩阵中每个元素$\Sigma_{ij}$表示了第i个状态变量和第j个状态变量的相关性的程度. （你可能猜得到协方差矩阵是&lt;a href="https://zh.wikipedia.org/wiki/對稱矩陣"&gt;对称阵&lt;/a&gt;，因为交换i,j的次序, 结果相同）. 协方差矩阵通常以符号“$\mathbf{\Sigma}$”表示，因此其每个元素可以“&lt;em&gt;$\Sigma_{ij}$”&lt;/em&gt;表示.
&lt;center&gt;&lt;img src="/images/gauss_2.png" width="310" height="286"/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;用矩阵描述我们的问题&lt;/h1&gt;
&lt;p&gt;若对这个问题中的状态向量建模，我们需要知道在&lt;em&gt;k&lt;/em&gt;时刻的两个信息：最佳估计$\mathbf{\hat{x}_k}$（均值）,
&lt;strong&gt;以及协方差矩阵&lt;/strong&gt;$\mathbf{P_k}$. &lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{eq:statevars} \begin{aligned}\mathbf{\hat{x}}_k &amp;amp;= 
\begin{bmatrix}
\text{position}\\
\text{velocity}
\end{bmatrix}\\
\mathbf{P}_k &amp;amp;=
\begin{bmatrix}
\Sigma_{pp} &amp;amp; \Sigma_{pv} \\
\Sigma_{vp} &amp;amp; \Sigma_{vv} \\
\end{bmatrix}
\end{aligned}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;(此处我们仅使用了位置和速度两个变量，在实际应用中状态向量可包含任意个变量，用来表示你所关心的任何信息). &lt;/p&gt;
&lt;p&gt;接下来，我们很关心如何得到&lt;span style="color: RoyalBlue;"&gt;当前状态&lt;/span&gt;(&lt;span style="color: RoyalBlue;"&gt;&lt;strong&gt;k-1&lt;/strong&gt;&lt;/span&gt;)和预测&lt;span style="color: DeepPink;"&gt;下一状态&lt;/span&gt;(&lt;span style="color: DeepPink;"&gt;&lt;strong&gt;k&lt;/strong&gt;&lt;/span&gt;)，注意我们并不知道状态值是否真实，但是预测函数对此并不关心，它仅在所有状态可能性的基础上给出一个新的预测分布：
&lt;center&gt;&lt;img src="/images/gauss_7.jpg" width="310" height="286"/&gt;&lt;/center&gt;
当前状态向量到预测下一步的状态向量的转换可用矩阵$\mathbf{F_k}$表示：
&lt;center&gt;&lt;img src="/images/gauss_8.jpg" width="310" height="286"/&gt;&lt;/center&gt;
从上图可看出，每一个可能的向量$\color{royalblue}{\mathbf{X_{k-1}}}$（原始估计）都可通过矩阵$\mathbf{F_k}$转换到$\color{deeppink}{\mathbf{X_k}}$(预测值), 若原始估计值正确，则系统下一个时刻的状态很可能为预测值. &lt;/p&gt;
&lt;p&gt;在我们这个机器人的小例子中，如何使用矩阵来预测下一时刻的位置和速度呢？使用基本的运动学公式：（这里认为两个时刻的速度近似不变）&lt;/p&gt;
&lt;p&gt;$$\begin{split}
\color{deeppink}{p_k} &amp;amp;= \color{royalblue}{p_{k-1}} + \Delta t
&amp;amp;\color{royalblue}{v_{k-1}} \\
\color{deeppink}{v_k} &amp;amp;= &amp;amp;\color{royalblue}{v_{k-1}}
\end{split}$$&lt;/p&gt;
&lt;p&gt;即：&lt;/p&gt;
&lt;p&gt;$$\begin{align} \color{deeppink}{\mathbf{\hat{x}}k} &amp;amp;=
\begin{bmatrix}
1 &amp;amp; \Delta t \\
0 &amp;amp; 1
\end{bmatrix}
\color{royalblue}{\mathbf{\hat{x}}} \\ &amp;amp;= \mathbf{F}k \color{royalblue}{\mathbf{\hat{x}}}\label{statevars} \end{align}$$&lt;/p&gt;
&lt;p&gt;现在我们得出了&lt;strong&gt;预测矩阵&lt;/strong&gt;$\mathbf{F_k}$，能告诉下一个状态；但如何更新协方差矩阵仍未知. &lt;/p&gt;
&lt;p&gt;这里我们需要使用另外一个公式，如果对每一个具有概率分布的点乘以矩阵$\color{firebrick}{\mathbf{A}}$，其协方差矩阵$\Sigma$会如何？&lt;/p&gt;
&lt;p&gt;其实这也不难，如下：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
Cov(x) &amp;amp;= \Sigma\\
Cov(\color{firebrick}{\mathbf{A}}x) &amp;amp;= \color{firebrick}{\mathbf{A}}\Sigma \color{firebrick}{\mathbf{A}}^T
\end{split} \label{covident}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;综合$\eqref{covident}$, $\eqref{statevars}$两式：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
\color{deeppink}{\mathbf{\hat{x}}_k} &amp;amp;= \mathbf{F}_k\color{royalblue}{\mathbf{\hat{x}}_{k-1}} \\
\color{deeppink}{\mathbf{P}_k} &amp;amp;= \mathbf{F_k}\color{royalblue}{\mathbf{P}_{k-1}} \mathbf{F}_k^T
\end{split}　\label{eq5}
\end{equation}$$&lt;/p&gt;
&lt;h2&gt;外部影响&lt;/h2&gt;
&lt;p&gt;然而我们并未考虑完全，外部环境的某些变化可能&lt;strong&gt;与状态向量不相关&lt;/strong&gt;，但仍能影响系统. &lt;/p&gt;
&lt;p&gt;例如：若上节中的状态向量表示了列车的运动，列车驾驶员可能推动油门，使列车加速. 类似的，在我们的机器人中，导航软件可能发出使轮子转动或停止的指令. 如果知道实际情况中这些额外的信息，我们可以将其放在向量$\color{darkorange}{\vec{\mathbf{u}_k}}$中，利用这个向量对我们的预测做进一步纠正. &lt;/p&gt;
&lt;p&gt;比方说根据油门或控制指令，我们知道预期的加速度$\color{darkorange}{a}$，可以得到：&lt;/p&gt;
&lt;p&gt;$$\begin{split}
\color{deeppink}{p_k} &amp;amp;= \color{royalblue}{p_{k-1}} + {\Delta t}
&amp;amp;\color{royalblue}{v_{k-1}} + &amp;amp;\frac{1}{2} \color{darkorange}{a}
{\Delta t}^2 \\
\color{deeppink}{v_k} &amp;amp;= &amp;amp;\color{royalblue}{v_{k-1}} + &amp;amp;\color{darkorange}{a} {\Delta t}
\end{split}$$&lt;/p&gt;
&lt;p&gt;矩阵的形式如下：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
\color{deeppink}{\mathbf{\hat{x}}_k} &amp;amp;= \mathbf{F}_k\color{royalblue}{\mathbf{\hat{x}}_{k-1}} + \begin{bmatrix}
\frac{\Delta t^2}{2} \\
\Delta t
\end{bmatrix} \color{darkorange}{a} \\
&amp;amp;= \mathbf{F}_k \color{royalblue}{\mathbf{\hat{x}}_{k-1}} +\mathbf{B}_k \color{darkorange}{\vec{\mathbf{u}_k}}
\end{split} \label{eq6}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;$\mathbf{B}_k$称之为&lt;strong&gt;控制矩阵&lt;/strong&gt;，$\color{darkorange}{\vec{\mathbf{u}_k}}$为&lt;strong&gt;控制向量&lt;/strong&gt;. （对于简单无外部干扰的系统，可忽略这两者）&lt;/p&gt;
&lt;p&gt;我们可以加入更多细节，但若预测模型并非100%准确将会发生什么？&lt;/p&gt;
&lt;h2&gt;外部不确定性&lt;/h2&gt;
&lt;p&gt;如果状态向量按照其固有属性发展，一切好说（可利用公式$\eqref{eq5}$）. 如果系统在有外界力的作用下发展，只要我们知道这些力，仍没问题(利用式$\eqref{eq6}$). &lt;/p&gt;
&lt;p&gt;但如果我们不知道这些力，怎么办？例如，强风的影响，轮子打滑，路面颠簸. 我们无法对这些全部考虑，而这些事情会导致我们的预测失灵. &lt;/p&gt;
&lt;p&gt;通过给每一步预测添加表示不确定的量，我们可以给环境的这种不确定性建模：
&lt;center&gt;&lt;img src="/images/gauss_9.jpg" width="310" height="286"/&gt;&lt;/center&gt;
如上图所示，k-1时刻的估计值$\color{royalblue}{\mathbf{\hat{x}}_{k-1}}$经过预测步骤后，可能以协方差$\color{mediumaquamarine}{\mathbf{Q}_k}$移动至&lt;span style="color: Purple;"&gt;紫色&lt;/span&gt;高斯斑点（Gaussian blob）内某个位置，也可以说将未知的环境影响视为协方差为$\color{mediumaquamarine}{\mathbf{Q}_k}$的&lt;strong&gt;噪音&lt;/strong&gt;. 
&lt;center&gt;&lt;img src="/images/gauss_10a.jpg" width="310" height="310"/&gt;&lt;/center&gt;
这将产生一个新的高斯斑点，但有不同的协方差（相同的平均值）：
&lt;center&gt;&lt;img src="/images/gauss_10b.jpg" width="310" height="310"/&gt;&lt;/center&gt;
简单地&lt;strong&gt;加上&lt;/strong&gt;$\color{mediumaquamarine}{\mathbf{Q}_k}$，能得到&lt;strong&gt;预测步骤&lt;/strong&gt;的完整表达式：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
\color{deeppink}{\mathbf{\hat{x}}_k} &amp;amp;= \mathbf{F}_k\color{royalblue}{\mathbf{\hat{x}}_{k-1}} + \mathbf{B}_k\color{darkorange}{\vec{\mathbf{u}_k}} \\
\color{deeppink}{\mathbf{P}_k} &amp;amp;= \mathbf{F_k}\color{royalblue}{\mathbf{P}_{k-1}} \mathbf{F}_k^T +\color{mediumaquamarine}{\mathbf{Q}_k}
\end{split}
\label{kalpredictfull}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;也就是说，&lt;span style="color: DeepPink;"&gt;新的最佳估计&lt;/span&gt;是对&lt;span style="color: RoyalBlue;"&gt;上一步最佳估计&lt;/span&gt;的&lt;strong&gt;预测&lt;/strong&gt;，并加上考虑&lt;span style="color: DarkOrange;"&gt;已知的外界影响&lt;/span&gt;后的&lt;strong&gt;修正量&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;&lt;span style="color: DeepPink;"&gt;新的不确定性&lt;/span&gt;是从&lt;span style="color: RoyalBlue;"&gt;上一步的不确定性&lt;/span&gt;&lt;strong&gt;预测&lt;/strong&gt;得来，并加上&lt;span style="color: MediumAquamarine;"&gt;环境的额外不确定性&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;如此一来就很简单了，通过$\color{deeppink}{\mathbf{\hat{x}}_k}$，$\color{deeppink}{\mathbf{P}_k}$，我们有对系统的模糊估计. 下一步我们将看看当从传感器读数据时，实际上发生了什么？&lt;/p&gt;
&lt;h1&gt;利用测量改善估计&lt;/h1&gt;
&lt;p&gt;我们可能有一些能给出系统状态信息的传感器. 目前它们能测什么没什么关系，可能有的传感器能测位置，有的能测速度. 每个传感器能&lt;strong&gt;间接地（indirect）&lt;/strong&gt;给出状态的某些信息，也就是说，传感器对系统状态进行某种操作，从而给出&lt;strong&gt;读数&lt;/strong&gt;. 
&lt;center&gt;&lt;img src="/images/gauss_12.jpg" width="621" height="286"/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;注意到传感器读数的单位和比例与我们所关心的系统状态的单位比例可能不同，你可能猜得到，我们以矩阵$\mathbf{H}_k$给传感器这种行为建模. 
&lt;center&gt;&lt;img src="/images/gauss_13.jpg" width="621" height="286"/&gt;&lt;/center&gt;
我们可以弄明白传感器读数的分布：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{aligned}
\vec{\mu}_{\text{expected}} &amp;amp;= \mathbf{H}_k\color{deeppink}{\mathbf{\hat{x}}_k} \\
\mathbf{\Sigma}_{\text{expected}} &amp;amp;= \mathbf{H}_k\color{deeppink}{\mathbf{P}_k} \mathbf{H}_k^T
\end{aligned}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;卡尔曼滤波器很棒的一点就是能处理传感器噪音. 噪音是指传感器总是有一些不可靠之处，原始估计中的每个状态会产生一系列可能的读数. 
&lt;center&gt;&lt;img src="/images/gauss_14.jpg" width="621" height="286"/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;根据观测到的每个读数，我们可以猜测系统处于某个特定的状态. 但由于有一些不确定性，一些状态比其他状态更具可能性，这些更具可能性的状态就产生了我们看到的读数:
&lt;center&gt;&lt;img src="/images/gauss_11.jpg" width="310" height="286"/&gt;&lt;/center&gt;
我们将此不确定性(例如传感器噪音)的&lt;strong&gt;协方差&lt;/strong&gt;称为$\color{mediumaquamarine}{\mathbf{R}_k}$，此分布的&lt;strong&gt;均值&lt;/strong&gt;就是我们观测到的读数$\color{yellowgreen}{\vec{\mathbf{z}_k}}$. &lt;/p&gt;
&lt;p&gt;现在我们有两个高斯斑点，一个的中心是预测的转换（$\mathbf{H}_k\color{deeppink}{\mathbf{\hat{x}}_k}$）后的均值，另一个的中心是传感器读数($\color{yellowgreen}{\vec{\mathbf{z}_k}}$). 
&lt;center&gt;&lt;img src="/images/gauss_4.jpg" width="310" height="286"/&gt;&lt;/center&gt;  &lt;/p&gt;
&lt;p&gt;对于系统状态现在可以从两个途径猜测，一个是基于从&lt;span style="color: DeepPink;"&gt;&lt;strong&gt;上一状态的预测&lt;/strong&gt;&lt;/span&gt;（式$\eqref{kalpredictfull}$），另一个是根据&lt;strong&gt;传感器读数&lt;/strong&gt;，我们必须兼顾调和这两个猜测. &lt;/p&gt;
&lt;p&gt;那么最有可能的新系统状态是什么？对于我们看到的读数$(z_1,z_2)$，实际上有两种相关的可能性：&lt;span style="color: YellowGreen;"&gt;（1）&lt;/span&gt;传感器读数$\color{yellowgreen}{\vec{\mathbf{z}_k}}$测出了$(z_1,z_2)$的值，&lt;span style="color: DeepPink;"&gt;（2）&lt;/span&gt;从上一步估计推测出此时系统的状态，此估计产生了我们看到的读数. &lt;/p&gt;
&lt;p&gt;如果有这两种可能性，而我们想知道这两种都正确的几率，只需要将其相乘：
&lt;center&gt;&lt;img src="/images/gauss_6a.png" width="310" height="286"/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重叠的区域&lt;/strong&gt;最具可能性. 这比任何单独一种的预测精确得多. 此分布的均值就是上述两种估计都最具可能性的值，因而也就是在所有给定信息基础上的&lt;strong&gt;最佳猜测&lt;/strong&gt;. 这看起来很像另外一个高斯分布. 
&lt;center&gt;&lt;img src="/images/gauss_6.png" width="310" height="286"/&gt;&lt;/center&gt;
事实证明，若将两个具有不同均值和协方差矩阵的高斯分布相乘，会得到一个具有新均值及新协方差矩阵的高斯分布. 下文将讲述此转换过程中各高斯分布参数间关系. &lt;/p&gt;
&lt;h1&gt;组合高斯分布&lt;/h1&gt;
&lt;p&gt;从最简单的一维高斯分布开始，均值为$\mu$， 方差为&lt;em&gt;$\sigma^2$&lt;/em&gt;的&lt;strong&gt;一维高斯分布&lt;/strong&gt;可定义如下：&lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{gaussformula}
\mathcal{N}(x, \mu,\sigma) = \frac{1}{ \sigma \sqrt{ 2\pi } }
e^{ -\frac{ (x – \mu)^2 }{ 2\sigma^2 } }
\end{equation}$$&lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{gaussequiv}
\mathcal{N}(x, \color{fuchsia}{\mu_0},\color{deeppink}{\sigma_0}) \cdot \mathcal{N}(x,\color{yellowgreen}{\mu_1}, \color{mediumaquamarine}{\sigma_1})\stackrel{?}{=} \mathcal{N}(x, \color{royalblue}{\mu’},\color{mediumblue}{\sigma’})
\end{equation}$$&lt;/p&gt;
&lt;p&gt;我们想知道将两个高斯分布相乘会得到什么？
&lt;center&gt;&lt;img src="/images/gauss_joint.png" width="589" height="381"/&gt;&lt;/center&gt;
将$\eqref{gaussformula}$式代入$\eqref{gaussequiv}$式并进行一些代数运算（注意需对新的分布作归一化处理，以使其总概率为1），可以得到：&lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{fusionformula}
\begin{aligned}
\color{royalblue}{\mu’} &amp;amp;= \mu_0 + \frac{\sigma_0^2 (\mu_1 –\mu_0)} {\sigma_0^2 + \sigma_1^2}\\
\color{mediumblue}{\sigma’}^2 &amp;amp;= \sigma_0^2 –\frac{\sigma_0^4} {\sigma_0^2 + \sigma_1^2}
\end{aligned}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;通过引入系数$\color{purple}{\mathbf{k}}$，可将上式简化:&lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{gainformula}
\color{purple}{\mathbf{k}} = \frac{\sigma_0^2}{\sigma_0^2 +\sigma_1^2}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
\color{royalblue}{\mu’} &amp;amp;= \mu_0 + &amp;amp;\color{purple}{\mathbf{k}}
(\mu_1 – \mu_0)\\
\color{mediumblue}{\sigma’}^2 &amp;amp;= \sigma_0^2 –
&amp;amp;\color{purple}{\mathbf{k}} \sigma_0^2
\end{split} \label{update}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;看这公式多简洁！我们能在之前的估计基础上加上一些东西，从而得到新的估计. &lt;/p&gt;
&lt;p&gt;这几个公式的矩阵版本是怎样的呢？只需将$\eqref{gainformula}$和$\eqref{update}$以矩阵的形式重写就可以了. 
若$\Sigma$为高斯分布的协方差矩阵，$\vec{\mu}$为其均值，则有：&lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{matrixgain}
\color{purple}{\mathbf{K}} = \Sigma_0 (\Sigma_0 +\Sigma_1)^{-1}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
\color{royalblue}{\vec{\mu}’} &amp;amp;= \vec{\mu_0} +
&amp;amp;\color{purple}{\mathbf{K}} (\vec{\mu_1} – \vec{\mu_0})\\
\color{mediumblue}{\Sigma’} &amp;amp;= \Sigma_0 –
&amp;amp;\color{purple}{\mathbf{K}} \Sigma_0
\end{split} \label{matrixupdate}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;将$\color{purple}{\mathbf{K}}$矩阵称为&lt;strong&gt;卡尔曼增益&lt;/strong&gt;，后面将会用到它. &lt;/p&gt;
&lt;p&gt;简单吧，我们还有一点点就学完了！&lt;/p&gt;
&lt;h1&gt;综上所述&lt;/h1&gt;
&lt;p&gt;我们有两个分布：预测值的测量$(\color{fuchsia}{\mu_0},\color{deeppink}{\Sigma_0}) = (\color{fuchsia}{\mathbf{H}_k\mathbf{\hat{x}}_k}, \color{deeppink}{\mathbf{H}_k \mathbf{P}_k\mathbf{H}_k^T})$；
观测到的测量$(\color{yellowgreen}{\mu_1},\color{mediumaquamarine}{\Sigma_1}) =
(\color{yellowgreen}{\vec{\mathbf{z}_k}},\color{mediumaquamarine}{\mathbf{R}_k})$. 将他们代入$\eqref{matrixupdate}$中：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{aligned}
\mathbf{H}_k \color{royalblue}{\mathbf{\hat{x}}_k’} &amp;amp;=\color{fuchsia}{\mathbf{H}_k \mathbf{\hat{x}}_k} &amp;amp; + &amp;amp;\color{purple}{\mathbf{K}} (\color{yellowgreen}{\vec{\mathbf{z}_k}} –\color{fuchsia}{\mathbf{H}_k \mathbf{\hat{x}}_k} ) \\
\mathbf{H}_k \color{royalblue}{\mathbf{P}_k’} \mathbf{H}_k^T &amp;amp;=\color{deeppink}{\mathbf{H}_k \mathbf{P}_k \mathbf{H}_k^T} &amp;amp; – &amp;amp;\color{purple}{\mathbf{K}} \color{deeppink}{\mathbf{H}_k\mathbf{P}_k \mathbf{H}_k^T}
\end{aligned} \label {kalunsimplified}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;从$\eqref{matrixgain}$式，得到卡尔曼增益是：&lt;/p&gt;
&lt;p&gt;$$\begin{equation} \label{eq:kalgainunsimplified}
\color{purple}{\mathbf{K}} = \color{deeppink}{\mathbf{H}_k\mathbf{P}_k \mathbf{H}_k^T} ( \color{deeppink}{\mathbf{H}_k\mathbf{P}_k \mathbf{H}_k^T} +\color{mediumaquamarine}{\mathbf{R}_k})^{-1}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;可将$\eqref{kalunsimplified}$中等式左侧的$\mathbf{H}_k$，$\mathbf{H}_k^T$都消掉，从而简化为：&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\begin{split}
\color{royalblue}{\mathbf{\hat{x}}_k’} &amp;amp;=\color{fuchsia}{\mathbf{\hat{x}}_k} &amp;amp; + &amp;amp;\color{purple}{\mathbf{K}’} (\color{yellowgreen}{\vec{\mathbf{z}_k}} –\color{fuchsia}{\mathbf{H}_k \mathbf{\hat{x}}_k} ) \\
\color{royalblue}{\mathbf{P}_k’} &amp;amp;= \color{deeppink}{\mathbf{P}_k}
&amp;amp; – &amp;amp; \color{purple}{\mathbf{K}’} \color{deeppink}{\mathbf{H}_k\mathbf{P}_k}
\end{split}
\label{kalupdatefull}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;$$\begin{equation}
\color{purple}{\mathbf{K}’} = \color{deeppink}{\mathbf{P}_k\mathbf{H}_k^T} ( \color{deeppink}{\mathbf{H}_k \mathbf{P}_k\mathbf{H}_k^T} + \color{mediumaquamarine}{\mathbf{R}_k})^{-1}
\label{kalgainfull}
\end{equation}$$&lt;/p&gt;
&lt;p&gt;这就是&lt;strong&gt;更新步骤&lt;/strong&gt;的完整方程.
$\color{royalblue}{\mathbf{\hat{x}}_k’}$是新的最佳估计，我们可以持续将此值以及$\color{royalblue}{\mathbf{P}_k’}$反馈给新的一轮又一轮的&lt;strong&gt;更新&lt;/strong&gt;与&lt;strong&gt;预测&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img src="/images/kalflow.png" style="zoom:80%"/&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h1&gt;小结&lt;/h1&gt;
&lt;p&gt;以上所有数学公式中，你仅需实现式$\eqref{kalpredictfull}, \eqref{kalupdatefull}$, 及 $\eqref{kalgainfull}$.（或者直接从$\eqref{covident}$, $\eqref{matrixupdate}$式推导）&lt;/p&gt;
&lt;p&gt;通过这些公式，你可准确地对任何线性系统建模，对于非线性系统，通过对预测及测量的平均值作简单的线性化处理，可使用&lt;strong&gt;扩展卡尔曼滤波器(Extended Kalman Filter)&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;本文参考了&lt;a href="http://www.cl.cam.ac.uk/~rmf25/papers/Understanding%20the%20Basis%20of%20the%20Kalman%20Filter.pdf"&gt;这篇好文&lt;/a&gt;，有探索精神的朋友可在此文中看到更深入的推导. &lt;/p&gt;</content><category term="卡尔曼滤波器"></category><category term="Kalman Filter"></category></entry></feed>